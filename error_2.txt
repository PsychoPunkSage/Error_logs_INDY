Collecting python-rocksdb==0.7.0
  Using cached python-rocksdb-0.7.0.tar.gz (219 kB)
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: setuptools>=25 in ./.direnv/python-3.9.0/lib/python3.9/site-packages (from python-rocksdb==0.7.0) (69.0.3)
Building wheels for collected packages: python-rocksdb
  Building wheel for python-rocksdb (setup.py): started
  Building wheel for python-rocksdb (setup.py): finished with status 'error'
  error: subprocess-exited-with-error
  
  × python setup.py bdist_wheel did not run successfully.
  │ exit code: 1
  ╰─> [7959 lines of output]
      /home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/__init__.py:80: _DeprecatedInstaller: setuptools.installer and fetch_build_eggs are deprecated.
      !!
      
              ********************************************************************************
              Requirements should be satisfied by a PEP 517 installer.
              If you are using pip, you can try `pip install --use-pep517`.
              ********************************************************************************
      
      !!
        dist.fetch_build_eggs(dist.setup_requires)
      running bdist_wheel
      running build
      running build_py
      creating build
      creating build/lib.linux-x86_64-cpython-39
      creating build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/interfaces.py -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/merge_operators.py -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/errors.py -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/__init__.py -> build/lib.linux-x86_64-cpython-39/rocksdb
      creating build/lib.linux-x86_64-cpython-39/rocksdb/tests
      copying rocksdb/tests/test_db.py -> build/lib.linux-x86_64-cpython-39/rocksdb/tests
      copying rocksdb/tests/test_options.py -> build/lib.linux-x86_64-cpython-39/rocksdb/tests
      copying rocksdb/tests/__init__.py -> build/lib.linux-x86_64-cpython-39/rocksdb/tests
      copying rocksdb/tests/test_memtable.py -> build/lib.linux-x86_64-cpython-39/rocksdb/tests
      running egg_info
      writing python_rocksdb.egg-info/PKG-INFO
      writing dependency_links to python_rocksdb.egg-info/dependency_links.txt
      writing requirements to python_rocksdb.egg-info/requires.txt
      writing top-level names to python_rocksdb.egg-info/top_level.txt
      reading manifest file 'python_rocksdb.egg-info/SOURCES.txt'
      reading manifest template 'MANIFEST.in'
      writing manifest file 'python_rocksdb.egg-info/SOURCES.txt'
      /home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/command/build_py.py:207: _Warning: Package 'rocksdb.cpp' is absent from the `packages` configuration.
      !!
      
              ********************************************************************************
              ############################
              # Package would be ignored #
              ############################
              Python recognizes 'rocksdb.cpp' as an importable package[^1],
              but it is absent from setuptools' `packages` configuration.
      
              This leads to an ambiguous overall configuration. If you want to distribute this
              package, please make sure that 'rocksdb.cpp' is explicitly added
              to the `packages` configuration field.
      
              Alternatively, you can also rely on setuptools' discovery methods
              (for example by using `find_namespace_packages(...)`/`find_namespace:`
              instead of `find_packages(...)`/`find:`).
      
              You can read more about "package discovery" on setuptools documentation page:
      
              - https://setuptools.pypa.io/en/latest/userguide/package_discovery.html
      
              If you don't want 'rocksdb.cpp' to be distributed and are
              already explicitly excluding 'rocksdb.cpp' via
              `find_namespace_packages(...)/find_namespace` or `find_packages(...)/find`,
              you can try to use `exclude_package_data`, or `include-package-data=False` in
              combination with a more fine grained `package-data` configuration.
      
              You can read more about "package data files" on setuptools documentation page:
      
              - https://setuptools.pypa.io/en/latest/userguide/datafiles.html
      
      
              [^1]: For Python, any directory (with suitable naming) can be imported,
                    even if it does not contain any `.py` files.
                    On the other hand, currently there is no concept of package data
                    directory, all directories are treated like packages.
              ********************************************************************************
      
      !!
        check.warn(importable)
      copying rocksdb/_rocksdb.cpp -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/_rocksdb.pyx -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/backup.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/cache.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/comparator.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/db.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/env.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/filter_policy.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/iterator.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/logger.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/memtablerep.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/merge_operator.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/options.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/slice_.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/slice_transform.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/snapshot.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/status.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/std_memory.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/table_factory.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      copying rocksdb/universal_compaction.pxd -> build/lib.linux-x86_64-cpython-39/rocksdb
      creating build/lib.linux-x86_64-cpython-39/rocksdb/cpp
      copying rocksdb/cpp/comparator_wrapper.hpp -> build/lib.linux-x86_64-cpython-39/rocksdb/cpp
      copying rocksdb/cpp/filter_policy_wrapper.hpp -> build/lib.linux-x86_64-cpython-39/rocksdb/cpp
      copying rocksdb/cpp/memtable_factories.hpp -> build/lib.linux-x86_64-cpython-39/rocksdb/cpp
      copying rocksdb/cpp/merge_operator_wrapper.hpp -> build/lib.linux-x86_64-cpython-39/rocksdb/cpp
      copying rocksdb/cpp/slice_transform_wrapper.hpp -> build/lib.linux-x86_64-cpython-39/rocksdb/cpp
      copying rocksdb/cpp/utils.hpp -> build/lib.linux-x86_64-cpython-39/rocksdb/cpp
      copying rocksdb/cpp/write_batch_iter_helper.hpp -> build/lib.linux-x86_64-cpython-39/rocksdb/cpp
      running build_ext
      Compiling rocksdb/_rocksdb.pyx because it changed.
      [1/1] Cythonizing rocksdb/_rocksdb.pyx
      /home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/Cython/Compiler/Main.py:381: FutureWarning: Cython directive 'language_level' not set, using '3str' for now (Py3). This has changed from earlier releases! File: /tmp/pip-install-2w2tx56z/python-rocksdb_7e9861a4bf784031ad304fd7592f6a55/rocksdb/_rocksdb.pyx
        tree = Parsing.p_module(s, pxd, full_module_name)
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from cpython.bytes cimport PyBytes_Size
      from cpython.bytes cimport PyBytes_FromString
      from cpython.bytes cimport PyBytes_FromStringAndSize
      from cpython.unicode cimport PyUnicode_Decode
      
      from std_memory cimport shared_ptr
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:15:0: 'std_memory.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from cpython.bytes cimport PyBytes_Size
      from cpython.bytes cimport PyBytes_FromString
      from cpython.bytes cimport PyBytes_FromStringAndSize
      from cpython.unicode cimport PyUnicode_Decode
      
      from std_memory cimport shared_ptr
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:15:0: 'std_memory/shared_ptr.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from cpython.bytes cimport PyBytes_FromString
      from cpython.bytes cimport PyBytes_FromStringAndSize
      from cpython.unicode cimport PyUnicode_Decode
      
      from std_memory cimport shared_ptr
      cimport options
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:16:8: 'options.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from cpython.bytes cimport PyBytes_FromStringAndSize
      from cpython.unicode cimport PyUnicode_Decode
      
      from std_memory cimport shared_ptr
      cimport options
      cimport merge_operator
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:17:8: 'merge_operator.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from cpython.unicode cimport PyUnicode_Decode
      
      from std_memory cimport shared_ptr
      cimport options
      cimport merge_operator
      cimport filter_policy
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:18:8: 'filter_policy.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      from std_memory cimport shared_ptr
      cimport options
      cimport merge_operator
      cimport filter_policy
      cimport comparator
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:19:8: 'comparator.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from std_memory cimport shared_ptr
      cimport options
      cimport merge_operator
      cimport filter_policy
      cimport comparator
      cimport slice_transform
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:20:8: 'slice_transform.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport options
      cimport merge_operator
      cimport filter_policy
      cimport comparator
      cimport slice_transform
      cimport cache
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:21:8: 'cache.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport merge_operator
      cimport filter_policy
      cimport comparator
      cimport slice_transform
      cimport cache
      cimport logger
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:22:8: 'logger.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport filter_policy
      cimport comparator
      cimport slice_transform
      cimport cache
      cimport logger
      cimport snapshot
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:23:8: 'snapshot.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport comparator
      cimport slice_transform
      cimport cache
      cimport logger
      cimport snapshot
      cimport db
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:24:8: 'db.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport slice_transform
      cimport cache
      cimport logger
      cimport snapshot
      cimport db
      cimport iterator
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:25:8: 'iterator.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport cache
      cimport logger
      cimport snapshot
      cimport db
      cimport iterator
      cimport backup
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:26:8: 'backup.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport logger
      cimport snapshot
      cimport db
      cimport iterator
      cimport backup
      cimport env
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:27:8: 'env.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport snapshot
      cimport db
      cimport iterator
      cimport backup
      cimport env
      cimport table_factory
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:28:8: 'table_factory.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport db
      cimport iterator
      cimport backup
      cimport env
      cimport table_factory
      cimport memtablerep
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:29:8: 'memtablerep.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport iterator
      cimport backup
      cimport env
      cimport table_factory
      cimport memtablerep
      cimport universal_compaction
              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:30:8: 'universal_compaction.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport memtablerep
      cimport universal_compaction
      
      # Enums are the only exception for direct imports
      # Their name als already unique enough
      from universal_compaction cimport kCompactionStopStyleSimilarSize
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:34:0: 'universal_compaction/kCompactionStopStyleSimilarSize.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cimport universal_compaction
      
      # Enums are the only exception for direct imports
      # Their name als already unique enough
      from universal_compaction cimport kCompactionStopStyleSimilarSize
      from universal_compaction cimport kCompactionStopStyleTotalSize
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:35:0: 'universal_compaction/kCompactionStopStyleTotalSize.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      # Enums are the only exception for direct imports
      # Their name als already unique enough
      from universal_compaction cimport kCompactionStopStyleSimilarSize
      from universal_compaction cimport kCompactionStopStyleTotalSize
      
      from options cimport kCompactionStyleLevel
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:37:0: 'options/kCompactionStyleLevel.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      # Their name als already unique enough
      from universal_compaction cimport kCompactionStopStyleSimilarSize
      from universal_compaction cimport kCompactionStopStyleTotalSize
      
      from options cimport kCompactionStyleLevel
      from options cimport kCompactionStyleUniversal
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:38:0: 'options/kCompactionStyleUniversal.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from universal_compaction cimport kCompactionStopStyleSimilarSize
      from universal_compaction cimport kCompactionStopStyleTotalSize
      
      from options cimport kCompactionStyleLevel
      from options cimport kCompactionStyleUniversal
      from options cimport kCompactionStyleFIFO
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:39:0: 'options/kCompactionStyleFIFO.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from universal_compaction cimport kCompactionStopStyleTotalSize
      
      from options cimport kCompactionStyleLevel
      from options cimport kCompactionStyleUniversal
      from options cimport kCompactionStyleFIFO
      from options cimport kCompactionStyleNone
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:40:0: 'options/kCompactionStyleNone.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from options cimport kCompactionStyleLevel
      from options cimport kCompactionStyleUniversal
      from options cimport kCompactionStyleFIFO
      from options cimport kCompactionStyleNone
      
      from slice_ cimport Slice
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:42:0: 'slice_.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from options cimport kCompactionStyleLevel
      from options cimport kCompactionStyleUniversal
      from options cimport kCompactionStyleFIFO
      from options cimport kCompactionStyleNone
      
      from slice_ cimport Slice
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:42:0: 'slice_/Slice.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from options cimport kCompactionStyleUniversal
      from options cimport kCompactionStyleFIFO
      from options cimport kCompactionStyleNone
      
      from slice_ cimport Slice
      from status cimport Status
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:43:0: 'status.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from options cimport kCompactionStyleUniversal
      from options cimport kCompactionStyleFIFO
      from options cimport kCompactionStyleNone
      
      from slice_ cimport Slice
      from status cimport Status
      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:43:0: 'status/Status.pxd' not found
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      from interfaces import SliceTransform as ISliceTransform
      import traceback
      import errors
      import weakref
      
      ctypedef const filter_policy.FilterPolicy ConstFilterPolicy
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:55:15: 'FilterPolicy' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      import weakref
      
      ctypedef const filter_policy.FilterPolicy ConstFilterPolicy
      
      cdef extern from "cpp/utils.hpp" namespace "py_rocks":
          cdef const Slice* vector_data(vector[Slice]&)
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:58:15: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      import weakref
      
      ctypedef const filter_policy.FilterPolicy ConstFilterPolicy
      
      cdef extern from "cpp/utils.hpp" namespace "py_rocks":
          cdef const Slice* vector_data(vector[Slice]&)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:58:41: unknown type in template argument
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef extern from "Python.h":
          void PyEval_InitThreads()
      PyEval_InitThreads()
      
      ## Here comes the stuff to wrap the status to exception
      cdef check_status(const Status& st):
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:68:24: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          return string(PyBytes_AsString(path), PyBytes_Size(path))
      
      cdef string_to_bytes(string ob):
          return PyBytes_FromStringAndSize(ob.c_str(), ob.size())
      
      cdef Slice bytes_to_slice(ob) except *:
           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:103:5: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          return PyBytes_FromStringAndSize(ob.c_str(), ob.size())
      
      cdef Slice bytes_to_slice(ob) except *:
          return Slice(PyBytes_AsString(ob), PyBytes_Size(ob))
      
      cdef slice_to_bytes(Slice sl):
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:106:20: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class PyComparator(object):
          cdef object get_ob(self):
              return None
      
          cdef const comparator.Comparator* get_comparator(self):
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:129:15: 'Comparator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return None
      
          cdef const comparator.Comparator* get_comparator(self):
              return NULL
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:132:28: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
              pass
      
      @cython.internal
      cdef class PyGenericComparator(PyComparator):
          cdef comparator.ComparatorWrapper* comparator_ptr
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:137:9: 'ComparatorWrapper' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  del self.comparator_ptr
      
          cdef object get_ob(self):
              return self.ob
      
          cdef const comparator.Comparator* get_comparator(self):
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:158:15: 'Comparator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return self.ob
      
          cdef const comparator.Comparator* get_comparator(self):
              return <comparator.Comparator*> self.comparator_ptr
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:161:28: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
              self.comparator_ptr.set_info_log(info_log)
      
      @cython.internal
      cdef class PyBytewiseComparator(PyComparator):
          cdef const comparator.Comparator* comparator_ptr
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:166:15: 'Comparator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  bytes_to_slice(b))
      
          cdef object get_ob(self):
             return self
      
          cdef const comparator.Comparator* get_comparator(self):
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:182:15: 'Comparator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      
      
      cdef int compare_callback(
          void* ctx,
          logger.Logger* log,
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:189:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef int compare_callback(
          void* ctx,
          logger.Logger* log,
          string& error_msg,
          const Slice& a,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:191:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef int compare_callback(
          void* ctx,
          logger.Logger* log,
          string& error_msg,
          const Slice& a,
          const Slice& b) with gil:
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:192:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class PyFilterPolicy(object):
          cdef object get_ob(self):
              return None
      
          cdef shared_ptr[ConstFilterPolicy] get_policy(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:212:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return None
      
          cdef shared_ptr[ConstFilterPolicy] get_policy(self):
              return shared_ptr[ConstFilterPolicy]()
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:215:28: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
              pass
      
      @cython.internal
      cdef class PyGenericFilterPolicy(PyFilterPolicy):
          cdef shared_ptr[filter_policy.FilterPolicyWrapper] policy
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:220:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
              pass
      
      @cython.internal
      cdef class PyGenericFilterPolicy(PyFilterPolicy):
          cdef shared_ptr[filter_policy.FilterPolicyWrapper] policy
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:220:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      key_may_match_callback))
      
          cdef object get_ob(self):
              return self.ob
      
          cdef shared_ptr[ConstFilterPolicy] get_policy(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:237:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return self.ob
      
          cdef shared_ptr[ConstFilterPolicy] get_policy(self):
              return <shared_ptr[ConstFilterPolicy]>(self.policy)
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:240:28: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              self.policy.get().set_info_log(info_log)
      
      
      cdef void create_filter_callback(
          void* ctx,
          logger.Logger* log,
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:246:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef void create_filter_callback(
          void* ctx,
          logger.Logger* log,
          string& error_msg,
          const Slice* keys,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:248:10: 'Slice' is not a type identifier
      performance hint: rocksdb/_rocksdb.pyx:244:5: Exception check on 'create_filter_callback' will always require the GIL to be acquired.
      Possible solutions:
          1. Declare the function as 'noexcept' if you control the definition and you're sure you don't want the function to raise exceptions.
          2. Use an 'int' return type on the function to allow an error code to be returned.
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              logger.Log(log, "Error in create filter callback: %s", <bytes>tb)
              error_msg.assign(<bytes>str(error))
      
      cdef cpp_bool key_may_match_callback(
          void* ctx,
          logger.Logger* log,
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:263:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef cpp_bool key_may_match_callback(
          void* ctx,
          logger.Logger* log,
          string& error_msg,
          const Slice& key,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:265:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef cpp_bool key_may_match_callback(
          void* ctx,
          logger.Logger* log,
          string& error_msg,
          const Slice& key,
          const Slice& filt) with gil:
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:266:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              logger.Log(log, "Error in key_mach_match callback: %s", <bytes>tb)
              error_msg.assign(<bytes>str(error))
      
      @cython.internal
      cdef class PyBloomFilterPolicy(PyFilterPolicy):
          cdef shared_ptr[ConstFilterPolicy] policy
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:279:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              logger.Log(log, "Error in key_mach_match callback: %s", <bytes>tb)
              error_msg.assign(<bytes>str(error))
      
      @cython.internal
      cdef class PyBloomFilterPolicy(PyFilterPolicy):
          cdef shared_ptr[ConstFilterPolicy] policy
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:279:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  bytes_to_slice(filter_))
      
          cdef object get_ob(self):
              return self
      
          cdef shared_ptr[ConstFilterPolicy] get_policy(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:309:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      
      ## Here comes the stuff for the merge operator
      @cython.internal
      cdef class PyMergeOperator(object):
          cdef shared_ptr[merge_operator.MergeOperator] merge_op
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:320:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      
      ## Here comes the stuff for the merge operator
      @cython.internal
      cdef class PyMergeOperator(object):
          cdef shared_ptr[merge_operator.MergeOperator] merge_op
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:320:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      
          cdef object get_ob(self):
              return self.ob
      
          cdef shared_ptr[merge_operator.MergeOperator] get_operator(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:368:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef shared_ptr[merge_operator.MergeOperator] get_operator(self):
              return self.merge_op
      
      cdef cpp_bool merge_callback(
          void* ctx,
          const Slice& key,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:373:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return self.merge_op
      
      cdef cpp_bool merge_callback(
          void* ctx,
          const Slice& key,
          const Slice* existing_value,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:374:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef cpp_bool merge_callback(
          void* ctx,
          const Slice& key,
          const Slice* existing_value,
          const Slice& value,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:375:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          void* ctx,
          const Slice& key,
          const Slice* existing_value,
          const Slice& value,
          string* new_value,
          logger.Logger* log) with gil:
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:377:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              logger.Log(log, "Error in merge_callback: %s", <bytes>tb)
              return False
      
      cdef cpp_bool full_merge_callback(
          void* ctx,
          const Slice& key,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:402:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return False
      
      cdef cpp_bool full_merge_callback(
          void* ctx,
          const Slice& key,
          const Slice* existing_value,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:403:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          void* ctx,
          const Slice& key,
          const Slice* existing_value,
          const deque[string]& op_list,
          string* new_value,
          logger.Logger* log) with gil:
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:406:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              logger.Log(log, "Error in full_merge_callback: %s", <bytes>tb)
              return False
      
      cdef cpp_bool partial_merge_callback(
          void* ctx,
          const Slice& key,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:431:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return False
      
      cdef cpp_bool partial_merge_callback(
          void* ctx,
          const Slice& key,
          const Slice& left_op,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:432:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef cpp_bool partial_merge_callback(
          void* ctx,
          const Slice& key,
          const Slice& left_op,
          const Slice& right_op,
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:433:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          void* ctx,
          const Slice& key,
          const Slice& left_op,
          const Slice& right_op,
          string* new_value,
          logger.Logger* log) with gil:
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:435:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      ##############################################
      
      #### Here comes the Cache stuff
      @cython.internal
      cdef class PyCache(object):
          cdef shared_ptr[cache.Cache] get_cache(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:457:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef shared_ptr[cache.Cache] get_cache(self):
              return shared_ptr[cache.Cache]()
      
      @cython.internal
      cdef class PyLRUCache(PyCache):
          cdef shared_ptr[cache.Cache] cache_ob
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:462:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef shared_ptr[cache.Cache] get_cache(self):
              return shared_ptr[cache.Cache]()
      
      @cython.internal
      cdef class PyLRUCache(PyCache):
          cdef shared_ptr[cache.Cache] cache_ob
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:462:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if shard_bits is not None:
                  self.cache_ob = cache.NewLRUCache(capacity, shard_bits)
              else:
                  self.cache_ob = cache.NewLRUCache(capacity)
      
          cdef shared_ptr[cache.Cache] get_cache(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:470:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      ###############################
      
      ### Here comes the stuff for SliceTransform
      @cython.internal
      cdef class PySliceTransform(object):
          cdef shared_ptr[slice_transform.SliceTransform] transfomer
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:479:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      ###############################
      
      ### Here comes the stuff for SliceTransform
      @cython.internal
      cdef class PySliceTransform(object):
          cdef shared_ptr[slice_transform.SliceTransform] transfomer
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:479:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                          slice_in_range_callback))
      
          cdef object get_ob(self):
              return self.ob
      
          cdef shared_ptr[slice_transform.SliceTransform] get_transformer(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:499:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return self.ob
      
          cdef shared_ptr[slice_transform.SliceTransform] get_transformer(self):
              return self.transfomer
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:502:28: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef slice_transform.SliceTransformWrapper* ptr
              ptr = <slice_transform.SliceTransformWrapper*> self.transfomer.get()
              ptr.set_info_log(info_log)
      
      
      cdef Slice slice_transform_callback(
           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:508:5: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              ptr.set_info_log(info_log)
      
      
      cdef Slice slice_transform_callback(
          void* ctx,
          logger.Logger* log,
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:510:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef Slice slice_transform_callback(
          void* ctx,
          logger.Logger* log,
          string& error_msg,
          const Slice& src) with gil:
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:512:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              logger.Log(log, "Error in slice transfrom callback: %s", <bytes>tb)
              error_msg.assign(<bytes>str(error))
      
      cdef cpp_bool slice_in_domain_callback(
          void* ctx,
          logger.Logger* log,
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:533:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef cpp_bool slice_in_domain_callback(
          void* ctx,
          logger.Logger* log,
          string& error_msg,
          const Slice& src) with gil:
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:535:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              logger.Log(log, "Error in slice transfrom callback: %s", <bytes>tb)
              error_msg.assign(<bytes>str(error))
      
      cdef cpp_bool slice_in_range_callback(
          void* ctx,
          logger.Logger* log,
          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:546:4: 'Logger' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef cpp_bool slice_in_range_callback(
          void* ctx,
          logger.Logger* log,
          string& error_msg,
          const Slice& src) with gil:
                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:548:10: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      ###########################################
      
      ## Here are the TableFactories
      @cython.internal
      cdef class PyTableFactory(object):
          cdef shared_ptr[table_factory.TableFactory] factory
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:561:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      ###########################################
      
      ## Here are the TableFactories
      @cython.internal
      cdef class PyTableFactory(object):
          cdef shared_ptr[table_factory.TableFactory] factory
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:561:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      ## Here are the TableFactories
      @cython.internal
      cdef class PyTableFactory(object):
          cdef shared_ptr[table_factory.TableFactory] factory
      
          cdef shared_ptr[table_factory.TableFactory] get_table_factory(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:563:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef shared_ptr[table_factory.TableFactory] factory
      
          cdef shared_ptr[table_factory.TableFactory] get_table_factory(self):
              return self.factory
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:566:28: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
                  table_options.filter_policy = self.py_filter_policy.get_policy()
      
              self.factory.reset(table_factory.NewBlockBasedTableFactory(table_options))
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:647:28: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      #############################################
      
      ### Here are the MemtableFactories
      @cython.internal
      cdef class PyMemtableFactory(object):
          cdef shared_ptr[memtablerep.MemTableRepFactory] factory
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:685:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      #############################################
      
      ### Here are the MemtableFactories
      @cython.internal
      cdef class PyMemtableFactory(object):
          cdef shared_ptr[memtablerep.MemTableRepFactory] factory
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:685:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      ### Here are the MemtableFactories
      @cython.internal
      cdef class PyMemtableFactory(object):
          cdef shared_ptr[memtablerep.MemTableRepFactory] factory
      
          cdef shared_ptr[memtablerep.MemTableRepFactory] get_memtable_factory(self):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:687:9: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          min_overlapping_ratio = u'min_overlapping_ratio'
      
      @cython.internal
      cdef class _ColumnFamilyHandle:
          """ This is an internal class that we will weakref for safety """
          cdef db.ColumnFamilyHandle* handle
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:738:9: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __dealloc__(self):
              if not self.handle == NULL:
                  del self.handle
      
          @staticmethod
          cdef from_handle_ptr(db.ColumnFamilyHandle* handle):
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:750:25: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __repr__(self):
              valid = "valid" if self.is_valid else "invalid"
              return f"<ColumnFamilyHandle name: {self.name}, id: {self.id}, state: {valid}>"
      
          cdef db.ColumnFamilyHandle* get_handle(self) except NULL:
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:795:9: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              # a situation where we are invalid, but match a valid handle's hash
              return hash((self.id, self.name, id(self._ref)))
      
      
      cdef class ColumnFamilyOptions(object):
          cdef options.ColumnFamilyOptions* copts
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:839:9: 'ColumnFamilyOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.py_prefix_extractor = PySliceTransform(value)
                  self.copts.prefix_extractor = self.py_prefix_extractor.get_transformer()
      
      
      cdef class Options(ColumnFamilyOptions):
          cdef options.Options* opts
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1239:9: 'Options' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      # Forward declaration
      cdef class WriteBatchIterator
      
      cdef class WriteBatch(object):
          cdef db.WriteBatch* batch
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1463:9: 'WriteBatch' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class WriteBatchIterator(object):
          # Need a reference to the WriteBatch.
          # The BatchItems are only pointers to the memory in WriteBatch.
          cdef WriteBatch batch
          cdef vector[db.BatchItem] items
                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1518:19: unknown type in template argument
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return ret
      
      @cython.no_gc_clear
      cdef class DB(object):
          cdef Options opts
          cdef db.DB* db
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1567:9: 'DB' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              read_tier="all"):
      
              # TODO: Is this really effiencet ?
              return locals()
      
          cdef options.ReadOptions build_read_opts(self, dict py_opts):
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2088:9: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      
      @cython.no_gc_clear
      @cython.internal
      cdef class Snapshot(object):
          cdef const snapshot.Snapshot* ptr
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2176:15: 'Snapshot' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      self.db.db.ReleaseSnapshot(self.ptr)
      
      
      @cython.internal
      cdef class BaseIterator(object):
          cdef iterator.Iterator* ptr
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2193:9: 'Iterator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.it.ptr.Prev()
              check_status(self.it.ptr.status())
              return ret
      
      cdef class BackupEngine(object):
          cdef backup.BackupEngine* engine
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2323:9: 'BackupEngine' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def name(self):
              return PyBytes_FromString(self.policy.get().Name())
      
          def create_filter(self, keys):
              cdef string dst
              cdef vector[Slice] c_keys
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:289:20: unknown type in template argument
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          cdef shared_ptr[slice_transform.SliceTransform] get_transformer(self):
              return self.transfomer
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
              cdef slice_transform.SliceTransformWrapper* ptr
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:503:13: 'SliceTransformWrapper' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  block_size=None,
                  block_size_deviation=None,
                  block_restart_interval=None,
                  whole_key_filtering=None):
      
              cdef table_factory.BlockBasedTableOptions table_options
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:585:13: 'BlockBasedTableOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  index_sparseness=10,
                  huge_page_tlb_size=0,
                  encoding_type='plain',
                  py_bool full_scan_mode=False):
      
              cdef table_factory.PlainTableOptions table_options
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:662:13: 'PlainTableOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  ret_ob['max_dict_bytes'] = self.copts.compression_opts.max_dict_bytes
      
                  return ret_ob
      
              def __set__(self, dict value):
                  cdef options.CompressionOptions* copts
                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:898:17: 'CompressionOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  else:
                      raise Exception("Unknown compaction style")
      
          property compaction_options_universal:
              def __get__(self):
                  cdef universal_compaction.CompactionOptionsUniversal uopts
                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1114:17: 'CompactionOptionsUniversal' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      raise Exception("Unknown compaction style")
      
                  return ret_ob
      
              def __set__(self, dict value):
                  cdef universal_compaction.CompactionOptionsUniversal* uopts
                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1135:17: 'CompactionOptionsUniversal' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __dealloc__(self):
              if not self.batch == NULL:
                  del self.batch
      
          def put(self, key, value):
              cdef db.ColumnFamilyHandle* cf_handle = NULL
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1477:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
              # nullptr is default family
              self.batch.Put(cf_handle, bytes_to_slice(key), bytes_to_slice(value))
      
          def merge(self, key, value):
              cdef db.ColumnFamilyHandle* cf_handle = NULL
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1485:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
              # nullptr is default family
              self.batch.Merge(cf_handle, bytes_to_slice(key), bytes_to_slice(value))
      
          def delete(self, key):
              cdef db.ColumnFamilyHandle* cf_handle = NULL
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1493:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef WriteBatch batch
          cdef vector[db.BatchItem] items
          cdef size_t pos
      
          def __init__(self, WriteBatch batch):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1522:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef db.DB* db
          cdef list cf_handles
          cdef list cf_options
      
          def __cinit__(self, db_name, Options opts, dict column_families=None, read_only=False):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1572:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef list cf_options
      
          def __cinit__(self, db_name, Options opts, dict column_families=None, read_only=False):
              cdef Status st
              cdef string db_path
              cdef vector[db.ColumnFamilyDescriptor] column_family_descriptors
                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1574:23: unknown type in template argument
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self, db_name, Options opts, dict column_families=None, read_only=False):
              cdef Status st
              cdef string db_path
              cdef vector[db.ColumnFamilyDescriptor] column_family_descriptors
              cdef vector[db.ColumnFamilyHandle*] column_family_handles
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1575:20: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              for handle in column_family_handles:
                  wrapper = _ColumnFamilyHandle.from_handle_ptr(handle)
                  self.cf_handles.append(wrapper)
      
              # Inject the loggers into the python callbacks
              cdef shared_ptr[logger.Logger] info_log = self.db.GetOptions(
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1643:13: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              for handle in column_family_handles:
                  wrapper = _ColumnFamilyHandle.from_handle_ptr(handle)
                  self.cf_handles.append(wrapper)
      
              # Inject the loggers into the python callbacks
              cdef shared_ptr[logger.Logger] info_log = self.db.GetOptions(
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1643:13: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              for handle in self.cf_handles:
                  if handle.name == name:
                      return handle.weakref
      
          def put(self, key, value, sync=False, disable_wal=False):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1700:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  if handle.name == name:
                      return handle.weakref
      
          def put(self, key, value, sync=False, disable_wal=False):
              cdef Status st
              cdef options.WriteOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1701:13: 'WriteOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if isinstance(key, tuple):
                  column_family, key = key
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1710:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  column_family, key = key
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
              cdef Slice c_value = bytes_to_slice(value)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1711:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
              cdef Slice c_value = bytes_to_slice(value)
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1712:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
              check_status(st)
      
          def delete(self, key, sync=False, disable_wal=False):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1721:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
              check_status(st)
      
          def delete(self, key, sync=False, disable_wal=False):
              cdef Status st
              cdef options.WriteOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1722:13: 'WriteOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if isinstance(key, tuple):
                  column_family, key = key
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1731:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  column_family, key = key
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1732:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  st = self.db.Delete(opts, cf_handle, c_key)
              check_status(st)
      
          def merge(self, key, value, sync=False, disable_wal=False):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1741:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  st = self.db.Delete(opts, cf_handle, c_key)
              check_status(st)
      
          def merge(self, key, value, sync=False, disable_wal=False):
              cdef Status st
              cdef options.WriteOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1742:13: 'WriteOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if isinstance(key, tuple):
                  column_family, key = key
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1751:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  column_family, key = key
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
              cdef Slice c_value = bytes_to_slice(value)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1752:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
              cdef Slice c_value = bytes_to_slice(value)
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1753:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
              check_status(st)
      
          def write(self, WriteBatch batch, sync=False, disable_wal=False):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1762:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
              check_status(st)
      
          def write(self, WriteBatch batch, sync=False, disable_wal=False):
              cdef Status st
              cdef options.WriteOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1763:13: 'WriteOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  st = self.db.Write(opts, batch.batch)
              check_status(st)
      
          def get(self, key, *args, **kwargs):
              cdef string res
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1773:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(st)
      
          def get(self, key, *args, **kwargs):
              cdef string res
              cdef Status st
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1774:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if isinstance(key, tuple):
                  column_family, key = key
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1783:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  column_family, key = key
              else:
                  column_family = None
      
              cdef Slice c_key = bytes_to_slice(key)
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1784:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def multi_get(self, keys, *args, **kwargs):
              cdef vector[string] values
              values.resize(len(keys))
      
              cdef db.ColumnFamilyHandle* cf_handle
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1802:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def multi_get(self, keys, *args, **kwargs):
              cdef vector[string] values
              values.resize(len(keys))
      
              cdef db.ColumnFamilyHandle* cf_handle
              cdef vector[db.ColumnFamilyHandle*] cf_handles
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1803:20: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef vector[string] values
              values.resize(len(keys))
      
              cdef db.ColumnFamilyHandle* cf_handle
              cdef vector[db.ColumnFamilyHandle*] cf_handles
              cdef vector[Slice] c_keys
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1804:20: unknown type in template argument
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  else:
                      cf_handle = self.db.DefaultColumnFamily()
                  c_keys.push_back(bytes_to_slice(key))
                  cf_handles.push_back(cf_handle)
      
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1814:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handles.push_back(cf_handle)
      
              cdef options.ReadOptions opts
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              cdef vector[Status] res
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1817:20: unknown type in template argument
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def key_may_exist(self, key, fetch=False, *args, **kwargs):
              cdef string value
              cdef cpp_bool value_found
              cdef cpp_bool exists
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1840:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def key_may_exist(self, key, fetch=False, *args, **kwargs):
              cdef string value
              cdef cpp_bool value_found
              cdef cpp_bool exists
              cdef options.ReadOptions opts
              cdef Slice c_key
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1841:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef string value
              cdef cpp_bool value_found
              cdef cpp_bool exists
              cdef options.ReadOptions opts
              cdef Slice c_key
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1842:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                          cython.address(value))
      
                  return (exists, None)
      
          def iterkeys(self, ColumnFamilyHandle column_family=None, *args, **kwargs):
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1880:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  return (exists, None)
      
          def iterkeys(self, ColumnFamilyHandle column_family=None, *args, **kwargs):
              cdef options.ReadOptions opts
              cdef KeysIterator it
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1882:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
              return it
      
          def itervalues(self, ColumnFamilyHandle column_family=None, *args, **kwargs):
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1894:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return it
      
          def itervalues(self, ColumnFamilyHandle column_family=None, *args, **kwargs):
              cdef options.ReadOptions opts
              cdef ValuesIterator it
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1896:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
              return it
      
          def iteritems(self, ColumnFamilyHandle column_family=None, *args, **kwargs):
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1909:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return it
      
          def iteritems(self, ColumnFamilyHandle column_family=None, *args, **kwargs):
              cdef options.ReadOptions opts
              cdef ItemsIterator it
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1911:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
              return it
      
          def iterskeys(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1923:20: 'Iterator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return it
      
          def iterskeys(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1925:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def iterskeys(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1926:13: 'Iterator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
              cdef KeysIterator it
              cdef db.ColumnFamilyHandle* cf_handle
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1928:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
              cdef KeysIterator it
              cdef db.ColumnFamilyHandle* cf_handle
              cdef vector[db.ColumnFamilyHandle*] cf_handles
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1929:20: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  it.ptr = it_ptr
                  ret.append(it)
              return ret
      
          def itersvalues(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1948:20: 'Iterator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return ret
      
          def itersvalues(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1950:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def itersvalues(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1951:13: 'Iterator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
              cdef ValuesIterator it
              cdef db.ColumnFamilyHandle* cf_handle
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1953:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
              cdef ValuesIterator it
              cdef db.ColumnFamilyHandle* cf_handle
              cdef vector[db.ColumnFamilyHandle*] cf_handles
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1954:20: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  it.ptr = it_ptr
                  ret.append(it)
              return ret
      
          def iterskeys(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1972:20: 'Iterator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return ret
      
          def iterskeys(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1974:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def iterskeys(self, column_families, *args, **kwargs):
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1975:13: 'Iterator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef vector[db.Iterator*] iters
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
              cdef ItemsIterator it
              cdef db.ColumnFamilyHandle* cf_handle
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1977:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              iters.resize(len(column_families))
              cdef options.ReadOptions opts
              cdef db.Iterator* it_ptr
              cdef ItemsIterator it
              cdef db.ColumnFamilyHandle* cf_handle
              cdef vector[db.ColumnFamilyHandle*] cf_handles
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1978:20: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def snapshot(self):
              return Snapshot(self)
      
          def get_property(self, prop, ColumnFamilyHandle column_family=None):
              cdef string value
              cdef Slice c_prop = bytes_to_slice(prop)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2002:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_property(self, prop, ColumnFamilyHandle column_family=None):
              cdef string value
              cdef Slice c_prop = bytes_to_slice(prop)
              cdef cpp_bool ret = False
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2004:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  return string_to_bytes(value)
              else:
                  return None
      
          def get_live_files_metadata(self):
              cdef vector[db.LiveFileMetaData] metadata
                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2017:23: unknown type in template argument
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  ret.append(t)
      
              return ret
      
          def compact_range(self, begin=None, end=None, ColumnFamilyHandle column_family=None, **py_options):
              cdef options.CompactRangeOptions c_options
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2038:13: 'CompactRangeOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              elif blc == 'force':
                  c_options.bottommost_level_compaction = options.blc_force
              else:
                  raise ValueError("bottommost_level_compaction is not valid")
      
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2053:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  c_options.bottommost_level_compaction = options.blc_force
              else:
                  raise ValueError("bottommost_level_compaction is not valid")
      
              cdef Status st
              cdef Slice begin_val
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2054:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              else:
                  raise ValueError("bottommost_level_compaction is not valid")
      
              cdef Status st
              cdef Slice begin_val
              cdef Slice end_val
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2055:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              cdef Status st
              cdef Slice begin_val
              cdef Slice end_val
      
              cdef Slice* begin_ptr
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2057:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef Status st
              cdef Slice begin_val
              cdef Slice end_val
      
              cdef Slice* begin_ptr
              cdef Slice* end_ptr
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2058:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              if end is not None:
                  end_val = bytes_to_slice(end)
                  end_ptr = cython.address(end_val)
      
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2071:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              # TODO: Is this really effiencet ?
              return locals()
      
          cdef options.ReadOptions build_read_opts(self, dict py_opts):
              cdef options.ReadOptions opts
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2089:13: 'ReadOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          property options:
              def __get__(self):
                  return self.opts
      
          def create_column_family(self, bytes name, ColumnFamilyOptions copts):
              cdef db.ColumnFamilyHandle* cf_handle
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2109:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              def __get__(self):
                  return self.opts
      
          def create_column_family(self, bytes name, ColumnFamilyOptions copts):
              cdef db.ColumnFamilyHandle* cf_handle
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2110:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              self.cf_handles.append(handle)
              self.cf_options.append(copts)
              return handle.weakref
      
          def drop_column_family(self, ColumnFamilyHandle weak_handle not None):
              cdef db.ColumnFamilyHandle* cf_handle
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2132:13: 'ColumnFamilyHandle' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return handle.weakref
      
          def drop_column_family(self, ColumnFamilyHandle weak_handle not None):
              cdef db.ColumnFamilyHandle* cf_handle
              cdef ColumnFamilyOptions copts
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2134:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if copts:
                  copts.in_use = False
      
      
      def repair_db(db_name, Options opts):
          cdef Status st
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2152:9: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          st = db.RepairDB(db_path, deref(opts.opts))
          check_status(st)
      
      
      def list_column_families(db_name, Options opts):
          cdef Status st
               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2161:9: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  self.ptr.SeekToLast()
              check_status(self.ptr.status())
      
          cpdef seek(self, key):
              cdef Slice c_key = bytes_to_slice(key)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2237:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  self.ptr.Seek(c_key)
              check_status(self.ptr.status())
      
          cpdef seek_for_prev(self, key):
              cdef Slice c_key = bytes_to_slice(key)
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2243:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return None
      
      @cython.internal
      cdef class KeysIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2254:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return slice_to_bytes(c_key)
      
      @cython.internal
      cdef class ValuesIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_value
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2265:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return slice_to_bytes(c_value)
      
      @cython.internal
      cdef class ItemsIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2274:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      @cython.internal
      cdef class ItemsIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2275:13: 'Slice' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef class BackupEngine(object):
          cdef backup.BackupEngine* engine
      
          def  __cinit__(self, backup_dir):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2326:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.engine == NULL:
                  with nogil:
                      del self.engine
      
          def create_backup(self, DB db, flush_before_backup=False):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2344:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  st = self.engine.CreateNewBackup(db.db, c_flush_before_backup)
              check_status(st)
      
          def restore_backup(self, backup_id, db_dir, wal_dir):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2354:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  st = self.engine.CreateNewBackup(db.db, c_flush_before_backup)
              check_status(st)
      
          def restore_backup(self, backup_id, db_dir, wal_dir):
              cdef Status st
              cdef backup.BackupID c_backup_id
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2355:13: 'BackupID' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      c_wal_dir)
      
              check_status(st)
      
          def restore_latest_backup(self, db_dir, wal_dir):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2372:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def stop_backup(self):
              with nogil:
                  self.engine.StopBackup()
      
          def purge_old_backups(self, num_backups_to_keep):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2389:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  st = self.engine.PurgeOldBackups(c_num_backups_to_keep)
              check_status(st)
      
          def delete_backup(self, backup_id):
              cdef Status st
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2399:13: 'Status' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  st = self.engine.PurgeOldBackups(c_num_backups_to_keep)
              check_status(st)
      
          def delete_backup(self, backup_id):
              cdef Status st
              cdef backup.BackupID c_backup_id
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2400:13: 'BackupID' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  st = self.engine.DeleteBackup(c_backup_id)
      
              check_status(st)
      
          def get_backup_info(self):
              cdef vector[backup.BackupInfo] backup_info
                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2410:27: unknown type in template argument
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      cdef string_to_bytes(string ob):
          return PyBytes_FromStringAndSize(ob.c_str(), ob.size())
      
      cdef Slice bytes_to_slice(ob) except *:
          return Slice(PyBytes_AsString(ob), PyBytes_Size(ob))
                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:104:11: 'Slice' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              self.comparator_ptr = NULL
              if not isinstance(ob, IComparator):
                  raise TypeError("%s is not of type %s" % (ob, IComparator))
      
              self.ob = ob
              self.comparator_ptr = new comparator.ComparatorWrapper(
                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:146:34: 'ComparatorWrapper' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              self.comparator_ptr = NULL
              if not isinstance(ob, IComparator):
                  raise TypeError("%s is not of type %s" % (ob, IComparator))
      
              self.ob = ob
              self.comparator_ptr = new comparator.ComparatorWrapper(
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:146:30: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      <void*>ob,
                      compare_callback)
      
          def __dealloc__(self):
              if not self.comparator_ptr == NULL:
                  del self.comparator_ptr
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:153:20: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          cdef object get_ob(self):
              return self.ob
      
          cdef const comparator.Comparator* get_comparator(self):
              return <comparator.Comparator*> self.comparator_ptr
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:159:16: 'Comparator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class PyBytewiseComparator(PyComparator):
          cdef const comparator.Comparator* comparator_ptr
      
          def __cinit__(self):
              self.comparator_ptr = comparator.BytewiseComparator()
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:169:40: cimported module has no attribute 'BytewiseComparator'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          try:
              return (<object>ctx).compare(slice_to_bytes(a), slice_to_bytes(b))
          except BaseException as error:
              tb = traceback.format_exc()
              logger.Log(log, "Error in compare callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:198:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef class PyFilterPolicy(object):
          cdef object get_ob(self):
              return None
      
          cdef shared_ptr[ConstFilterPolicy] get_policy(self):
              return shared_ptr[ConstFilterPolicy]()
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:213:15: 'shared_ptr' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef class PyFilterPolicy(object):
          cdef object get_ob(self):
              return None
      
          cdef shared_ptr[ConstFilterPolicy] get_policy(self):
              return shared_ptr[ConstFilterPolicy]()
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:213:26: 'ConstFilterPolicy' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __cinit__(self, object ob):
              if not isinstance(ob, IFilterPolicy):
                  raise TypeError("%s is not of type %s" % (ob, IFilterPolicy))
      
              self.ob = ob
              self.policy.reset(new filter_policy.FilterPolicyWrapper(
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:228:30: 'FilterPolicyWrapper' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __cinit__(self, object ob):
              if not isinstance(ob, IFilterPolicy):
                  raise TypeError("%s is not of type %s" % (ob, IFilterPolicy))
      
              self.ob = ob
              self.policy.reset(new filter_policy.FilterPolicyWrapper(
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:228:26: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          cdef object get_ob(self):
              return self.ob
      
          cdef shared_ptr[ConstFilterPolicy] get_policy(self):
              return <shared_ptr[ConstFilterPolicy]>(self.policy)
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:238:16: 'shared_ptr' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              ret = (<object>ctx).create_filter(
                  [slice_to_bytes(keys[i]) for i in range(n)])
              dst.append(bytes_to_string(ret))
          except BaseException as error:
              tb = traceback.format_exc()
              logger.Log(log, "Error in create filter callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:258:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              return (<object>ctx).key_may_match(
                  slice_to_bytes(key),
                  slice_to_bytes(filt))
          except BaseException as error:
              tb = traceback.format_exc()
              logger.Log(log, "Error in key_mach_match callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:274:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class PyBloomFilterPolicy(PyFilterPolicy):
          cdef shared_ptr[ConstFilterPolicy] policy
      
          def __cinit__(self, int bits_per_key):
              self.policy.reset(filter_policy.NewBloomFilterPolicy(bits_per_key))
                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:282:39: cimported module has no attribute 'NewBloomFilterPolicy'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  c_keys.push_back(bytes_to_slice(key))
      
              self.policy.get().CreateFilter(
                  vector_data(c_keys),
                  <int>c_keys.size(),
                  cython.address(dst))
                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:297:18: Cannot convert 'string *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self, object ob):
              self.ob = ob
              if isinstance(ob, IAssociativeMergeOperator):
                  self.merge_op.reset(
                      <merge_operator.MergeOperator*>
                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:327:17: 'MergeOperator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __cinit__(self, object ob):
              self.ob = ob
              if isinstance(ob, IAssociativeMergeOperator):
                  self.merge_op.reset(
                      <merge_operator.MergeOperator*>
                          new merge_operator.AssociativeMergeOperatorWrapper(
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:328:24: 'AssociativeMergeOperatorWrapper' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __cinit__(self, object ob):
              self.ob = ob
              if isinstance(ob, IAssociativeMergeOperator):
                  self.merge_op.reset(
                      <merge_operator.MergeOperator*>
                          new merge_operator.AssociativeMergeOperatorWrapper(
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:328:20: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                              <void*>(ob),
                              merge_callback))
      
              elif isinstance(ob, IMergeOperator):
                  self.merge_op.reset(
                      <merge_operator.MergeOperator*>
                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:335:17: 'MergeOperator' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                              merge_callback))
      
              elif isinstance(ob, IMergeOperator):
                  self.merge_op.reset(
                      <merge_operator.MergeOperator*>
                          new merge_operator.MergeOperatorWrapper(
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:336:24: 'MergeOperatorWrapper' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                              merge_callback))
      
              elif isinstance(ob, IMergeOperator):
                  self.merge_op.reset(
                      <merge_operator.MergeOperator*>
                          new merge_operator.MergeOperatorWrapper(
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:336:20: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  return True
              return False
      
          except:
              tb = traceback.format_exc()
              logger.Log(log, "Error in merge_callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:397:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  return True
              return False
      
          except:
              tb = traceback.format_exc()
              logger.Log(log, "Error in full_merge_callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:426:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  return True
              return False
      
          except:
              tb = traceback.format_exc()
              logger.Log(log, "Error in partial_merge_callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:450:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      #### Here comes the Cache stuff
      @cython.internal
      cdef class PyCache(object):
          cdef shared_ptr[cache.Cache] get_cache(self):
              return shared_ptr[cache.Cache]()
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:458:15: 'shared_ptr' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
      #### Here comes the Cache stuff
      @cython.internal
      cdef class PyCache(object):
          cdef shared_ptr[cache.Cache] get_cache(self):
              return shared_ptr[cache.Cache]()
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:458:31: cimported module has no attribute 'Cache'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef class PyLRUCache(PyCache):
          cdef shared_ptr[cache.Cache] cache_ob
      
          def __cinit__(self, capacity, shard_bits=None):
              if shard_bits is not None:
                  self.cache_ob = cache.NewLRUCache(capacity, shard_bits)
                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:466:33: cimported module has no attribute 'NewLRUCache'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self, capacity, shard_bits=None):
              if shard_bits is not None:
                  self.cache_ob = cache.NewLRUCache(capacity, shard_bits)
              else:
                  self.cache_ob = cache.NewLRUCache(capacity)
                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:468:33: cimported module has no attribute 'NewLRUCache'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not isinstance(ob, ISliceTransform):
                  raise TypeError("%s is not of type %s" % (ob, ISliceTransform))
      
              self.ob = ob
              self.transfomer.reset(
                  <slice_transform.SliceTransform*>
                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:488:13: 'SliceTransform' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  raise TypeError("%s is not of type %s" % (ob, ISliceTransform))
      
              self.ob = ob
              self.transfomer.reset(
                  <slice_transform.SliceTransform*>
                      new slice_transform.SliceTransformWrapper(
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:489:20: 'SliceTransformWrapper' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  raise TypeError("%s is not of type %s" % (ob, ISliceTransform))
      
              self.ob = ob
              self.transfomer.reset(
                  <slice_transform.SliceTransform*>
                      new slice_transform.SliceTransformWrapper(
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:489:16: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef shared_ptr[slice_transform.SliceTransform] get_transformer(self):
              return self.transfomer
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
              cdef slice_transform.SliceTransformWrapper* ptr
              ptr = <slice_transform.SliceTransformWrapper*> self.transfomer.get()
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:504:15: 'SliceTransformWrapper' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef shared_ptr[slice_transform.SliceTransform] get_transformer(self):
              return self.transfomer
      
          cdef set_info_log(self, shared_ptr[logger.Logger] info_log):
              cdef slice_transform.SliceTransformWrapper* ptr
              ptr = <slice_transform.SliceTransformWrapper*> self.transfomer.get()
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:504:14: Casting temporary Python object to non-numeric non-Python type
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              size = ret[1]
              if (offset + size) > src.size():
                  msg = "offset(%i) + size(%i) is bigger than slice(%i)"
                  raise Exception(msg  % (offset, size, src.size()))
      
              return Slice(src.data() + offset, size)
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:525:15: 'Slice' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  raise Exception(msg  % (offset, size, src.size()))
      
              return Slice(src.data() + offset, size)
          except BaseException as error:
              tb = traceback.format_exc()
              logger.Log(log, "Error in slice transfrom callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:528:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          try:
              return (<object>ctx).in_domain(slice_to_bytes(src))
          except BaseException as error:
              tb = traceback.format_exc()
              logger.Log(log, "Error in slice transfrom callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:541:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          try:
              return (<object>ctx).in_range(slice_to_bytes(src))
          except BaseException as error:
              tb = traceback.format_exc()
              logger.Log(log, "Error in slice transfrom callback: %s", <bytes>tb)
                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:554:14: cimported module has no attribute 'Log'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  whole_key_filtering=None):
      
              cdef table_factory.BlockBasedTableOptions table_options
      
              if index_type == 'binary_search':
                  table_options.index_type = table_factory.kBinarySearch
                                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:588:52: cimported module has no attribute 'kBinarySearch'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef table_factory.BlockBasedTableOptions table_options
      
              if index_type == 'binary_search':
                  table_options.index_type = table_factory.kBinarySearch
              elif index_type == 'hash_search':
                  table_options.index_type = table_factory.kHashSearch
                                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:590:52: cimported module has no attribute 'kHashSearch'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  table_options.hash_index_allow_collision = True
              else:
                  table_options.hash_index_allow_collision = False
      
              if checksum == 'crc32':
                  table_options.checksum = table_factory.kCRC32c
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:600:50: cimported module has no attribute 'kCRC32c'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  table_options.hash_index_allow_collision = False
      
              if checksum == 'crc32':
                  table_options.checksum = table_factory.kCRC32c
              elif checksum == 'xxhash':
                  table_options.checksum = table_factory.kxxHash
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:602:50: cimported module has no attribute 'kxxHash'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              # Set the filter_policy
              self.py_filter_policy = None
              if filter_policy is not None:
                  if isinstance(filter_policy, PyFilterPolicy):
                      if (<PyFilterPolicy?>filter_policy).get_policy().get() == NULL:
                                                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:637:71: Invalid types for '==' (Python object, void *)
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  else:
                      self.py_filter_policy = PyGenericFilterPolicy(filter_policy)
      
                  table_options.filter_policy = self.py_filter_policy.get_policy()
      
              self.factory.reset(table_factory.NewBlockBasedTableFactory(table_options))
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:645:40: cimported module has no attribute 'NewBlockBasedTableFactory'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              table_options.hash_table_ratio = hash_table_ratio
              table_options.index_sparseness = index_sparseness
              table_options.huge_page_tlb_size = huge_page_tlb_size
      
              if encoding_type == 'plain':
                  table_options.encoding_type = table_factory.kPlain
                                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:671:55: cimported module has no attribute 'kPlain'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              table_options.huge_page_tlb_size = huge_page_tlb_size
      
              if encoding_type == 'plain':
                  table_options.encoding_type = table_factory.kPlain
              elif encoding_type == 'prefix':
                  table_options.encoding_type = table_factory.kPrefix
                                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:673:55: cimported module has no attribute 'kPrefix'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              else:
                  raise ValueError("Unknown encoding_type: %s" % encoding_type)
      
              table_options.full_scan_mode = full_scan_mode
      
              self.factory.reset( table_factory.NewPlainTableFactory(table_options))
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:679:41: cimported module has no attribute 'NewPlainTableFactory'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef shared_ptr[memtablerep.MemTableRepFactory] get_memtable_factory(self):
              return self.factory
      
      cdef class SkipListMemtableFactory(PyMemtableFactory):
          def __init__(self):
              self.factory.reset(memtablerep.NewSkipListFactory())
                                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:692:38: cimported module has no attribute 'NewSkipListFactory'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __init__(self):
              self.factory.reset(memtablerep.NewSkipListFactory())
      
      cdef class VectorMemtableFactory(PyMemtableFactory):
          def __init__(self, count=0):
              self.factory.reset(memtablerep.NewVectorRepFactory(count))
                                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:696:38: cimported module has no attribute 'NewVectorRepFactory'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  bucket_count=1000000,
                  skiplist_height=4,
                  skiplist_branching_factor=4):
      
              self.factory.reset(
                  memtablerep.NewHashSkipListRepFactory(
                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:706:23: cimported module has no attribute 'NewHashSkipListRepFactory'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      skiplist_height,
                      skiplist_branching_factor))
      
      cdef class HashLinkListMemtableFactory(PyMemtableFactory):
          def __init__(self, bucket_count=50000):
              self.factory.reset(memtablerep.NewHashLinkListRepFactory(bucket_count))
                                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:713:38: cimported module has no attribute 'NewHashLinkListRepFactory'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __cinit__(self):
              self.handle = NULL
      
          def __dealloc__(self):
              if not self.handle == NULL:
                  del self.handle
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:747:20: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          # Used to protect sharing of Options with many DB-objects
          cdef cpp_bool in_use
      
          def __cinit__(self):
              self.copts = NULL
              self.copts = new options.ColumnFamilyOptions()
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:851:25: 'ColumnFamilyOptions' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          # Used to protect sharing of Options with many DB-objects
          cdef cpp_bool in_use
      
          def __cinit__(self):
              self.copts = NULL
              self.copts = new options.ColumnFamilyOptions()
                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:851:21: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              self.copts = new options.ColumnFamilyOptions()
              self.in_use = False
      
          def __dealloc__(self):
              if not self.copts == NULL:
                  del self.copts
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:856:20: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
                  return ret_ob
      
              def __set__(self, dict value):
                  cdef options.CompressionOptions* copts
                  copts = cython.address(self.copts.compression_opts)
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:899:26: Cannot take address of Python object attribute 'compression_opts'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  if 'max_dict_bytes' in value:
                      copts.max_dict_bytes = value['max_dict_bytes']
      
          property compaction_pri:
              def __get__(self):
                  if self.copts.compaction_pri == options.kByCompensatedSize:
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:912:51: cimported module has no attribute 'kByCompensatedSize'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          property compaction_pri:
              def __get__(self):
                  if self.copts.compaction_pri == options.kByCompensatedSize:
                      return CompactionPri.by_compensated_size
                  if self.copts.compaction_pri == options.kOldestLargestSeqFirst:
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:914:51: cimported module has no attribute 'kOldestLargestSeqFirst'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              def __get__(self):
                  if self.copts.compaction_pri == options.kByCompensatedSize:
                      return CompactionPri.by_compensated_size
                  if self.copts.compaction_pri == options.kOldestLargestSeqFirst:
                      return CompactionPri.oldest_largest_seq_first
                  if self.copts.compaction_pri == options.kOldestSmallestSeqFirst:
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:916:51: cimported module has no attribute 'kOldestSmallestSeqFirst'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompactionPri.by_compensated_size
                  if self.copts.compaction_pri == options.kOldestLargestSeqFirst:
                      return CompactionPri.oldest_largest_seq_first
                  if self.copts.compaction_pri == options.kOldestSmallestSeqFirst:
                      return CompactionPri.oldest_smallest_seq_first
                  if self.copts.compaction_pri == options.kMinOverlappingRatio:
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:918:51: cimported module has no attribute 'kMinOverlappingRatio'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompactionPri.oldest_smallest_seq_first
                  if self.copts.compaction_pri == options.kMinOverlappingRatio:
                      return CompactionPri.min_overlapping_ratio
              def __set__(self, value):
                  if value == CompactionPri.by_compensated_size:
                      self.copts.compaction_pri = options.kByCompensatedSize
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:922:51: cimported module has no attribute 'kByCompensatedSize'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompactionPri.min_overlapping_ratio
              def __set__(self, value):
                  if value == CompactionPri.by_compensated_size:
                      self.copts.compaction_pri = options.kByCompensatedSize
                  elif value == CompactionPri.oldest_largest_seq_first:
                      self.copts.compaction_pri = options.kOldestLargestSeqFirst
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:924:51: cimported module has no attribute 'kOldestLargestSeqFirst'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  if value == CompactionPri.by_compensated_size:
                      self.copts.compaction_pri = options.kByCompensatedSize
                  elif value == CompactionPri.oldest_largest_seq_first:
                      self.copts.compaction_pri = options.kOldestLargestSeqFirst
                  elif value == CompactionPri.oldest_smallest_seq_first:
                      self.copts.compaction_pri = options.kOldestSmallestSeqFirst
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:926:51: cimported module has no attribute 'kOldestSmallestSeqFirst'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  elif value == CompactionPri.oldest_largest_seq_first:
                      self.copts.compaction_pri = options.kOldestLargestSeqFirst
                  elif value == CompactionPri.oldest_smallest_seq_first:
                      self.copts.compaction_pri = options.kOldestSmallestSeqFirst
                  elif value == CompactionPri.min_overlapping_ratio:
                      self.copts.compaction_pri = options.kMinOverlappingRatio
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:928:51: cimported module has no attribute 'kMinOverlappingRatio'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  else:
                      raise TypeError("Unknown compaction pri: %s" % value)
      
          property compression:
              def __get__(self):
                  if self.copts.compression == options.kNoCompression:
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:934:48: cimported module has no attribute 'kNoCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          property compression:
              def __get__(self):
                  if self.copts.compression == options.kNoCompression:
                      return CompressionType.no_compression
                  elif self.copts.compression  == options.kSnappyCompression:
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:936:51: cimported module has no attribute 'kSnappyCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              def __get__(self):
                  if self.copts.compression == options.kNoCompression:
                      return CompressionType.no_compression
                  elif self.copts.compression  == options.kSnappyCompression:
                      return CompressionType.snappy_compression
                  elif self.copts.compression == options.kZlibCompression:
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:938:50: cimported module has no attribute 'kZlibCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompressionType.no_compression
                  elif self.copts.compression  == options.kSnappyCompression:
                      return CompressionType.snappy_compression
                  elif self.copts.compression == options.kZlibCompression:
                      return CompressionType.zlib_compression
                  elif self.copts.compression == options.kBZip2Compression:
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:940:50: cimported module has no attribute 'kBZip2Compression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompressionType.snappy_compression
                  elif self.copts.compression == options.kZlibCompression:
                      return CompressionType.zlib_compression
                  elif self.copts.compression == options.kBZip2Compression:
                      return CompressionType.bzip2_compression
                  elif self.copts.compression == options.kLZ4Compression:
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:942:50: cimported module has no attribute 'kLZ4Compression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompressionType.zlib_compression
                  elif self.copts.compression == options.kBZip2Compression:
                      return CompressionType.bzip2_compression
                  elif self.copts.compression == options.kLZ4Compression:
                      return CompressionType.lz4_compression
                  elif self.copts.compression == options.kLZ4HCCompression:
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:944:50: cimported module has no attribute 'kLZ4HCCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompressionType.bzip2_compression
                  elif self.copts.compression == options.kLZ4Compression:
                      return CompressionType.lz4_compression
                  elif self.copts.compression == options.kLZ4HCCompression:
                      return CompressionType.lz4hc_compression
                  elif self.copts.compression == options.kXpressCompression:
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:946:50: cimported module has no attribute 'kXpressCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompressionType.lz4_compression
                  elif self.copts.compression == options.kLZ4HCCompression:
                      return CompressionType.lz4hc_compression
                  elif self.copts.compression == options.kXpressCompression:
                      return CompressionType.xpress_compression
                  elif self.copts.compression == options.kZSTD:
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:948:50: cimported module has no attribute 'kZSTD'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompressionType.lz4hc_compression
                  elif self.copts.compression == options.kXpressCompression:
                      return CompressionType.xpress_compression
                  elif self.copts.compression == options.kZSTD:
                      return CompressionType.zstd_compression
                  elif self.copts.compression == options.kZSTDNotFinalCompression:
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:950:50: cimported module has no attribute 'kZSTDNotFinalCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return CompressionType.xpress_compression
                  elif self.copts.compression == options.kZSTD:
                      return CompressionType.zstd_compression
                  elif self.copts.compression == options.kZSTDNotFinalCompression:
                      return CompressionType.zstdnotfinal_compression
                  elif self.copts.compression == options.kDisableCompressionOption:
                                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:952:50: cimported module has no attribute 'kDisableCompressionOption'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  else:
                      raise Exception("Unknonw type: %s" % self.opts.compression)
      
              def __set__(self, value):
                  if value == CompressionType.no_compression:
                      self.copts.compression = options.kNoCompression
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:959:48: cimported module has no attribute 'kNoCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              def __set__(self, value):
                  if value == CompressionType.no_compression:
                      self.copts.compression = options.kNoCompression
                  elif value == CompressionType.snappy_compression:
                      self.copts.compression = options.kSnappyCompression
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:961:48: cimported module has no attribute 'kSnappyCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  if value == CompressionType.no_compression:
                      self.copts.compression = options.kNoCompression
                  elif value == CompressionType.snappy_compression:
                      self.copts.compression = options.kSnappyCompression
                  elif value == CompressionType.zlib_compression:
                      self.copts.compression = options.kZlibCompression
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:963:48: cimported module has no attribute 'kZlibCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  elif value == CompressionType.snappy_compression:
                      self.copts.compression = options.kSnappyCompression
                  elif value == CompressionType.zlib_compression:
                      self.copts.compression = options.kZlibCompression
                  elif value == CompressionType.bzip2_compression:
                      self.copts.compression = options.kBZip2Compression
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:965:48: cimported module has no attribute 'kBZip2Compression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  elif value == CompressionType.zlib_compression:
                      self.copts.compression = options.kZlibCompression
                  elif value == CompressionType.bzip2_compression:
                      self.copts.compression = options.kBZip2Compression
                  elif value == CompressionType.lz4_compression:
                      self.copts.compression = options.kLZ4Compression
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:967:48: cimported module has no attribute 'kLZ4Compression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  elif value == CompressionType.bzip2_compression:
                      self.copts.compression = options.kBZip2Compression
                  elif value == CompressionType.lz4_compression:
                      self.copts.compression = options.kLZ4Compression
                  elif value == CompressionType.lz4hc_compression:
                      self.copts.compression = options.kLZ4HCCompression
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:969:48: cimported module has no attribute 'kLZ4HCCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  elif value == CompressionType.lz4_compression:
                      self.copts.compression = options.kLZ4Compression
                  elif value == CompressionType.lz4hc_compression:
                      self.copts.compression = options.kLZ4HCCompression
                  elif value == CompressionType.zstd_compression:
                      self.copts.compression = options.kZSTD
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:971:48: cimported module has no attribute 'kZSTD'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  elif value == CompressionType.lz4hc_compression:
                      self.copts.compression = options.kLZ4HCCompression
                  elif value == CompressionType.zstd_compression:
                      self.copts.compression = options.kZSTD
                  elif value == CompressionType.zstdnotfinal_compression:
                      self.copts.compression = options.kZSTDNotFinalCompression
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:973:48: cimported module has no attribute 'kZSTDNotFinalCompression'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  elif value == CompressionType.zstd_compression:
                      self.copts.compression = options.kZSTD
                  elif value == CompressionType.zstdnotfinal_compression:
                      self.copts.compression = options.kZSTDNotFinalCompression
                  elif value == CompressionType.disable_compression:
                      self.copts.compression = options.kDisableCompressionOption
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:975:48: cimported module has no attribute 'kDisableCompressionOption'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              #  def __set__(self, value):
                  #  self.copts.allow_os_buffer = value
      
          property compaction_style:
              def __get__(self):
                  if self.copts.compaction_style == kCompactionStyleLevel:
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1090:46: 'kCompactionStyleLevel' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          property compaction_style:
              def __get__(self):
                  if self.copts.compaction_style == kCompactionStyleLevel:
                      return 'level'
                  if self.copts.compaction_style == kCompactionStyleUniversal:
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1092:46: 'kCompactionStyleUniversal' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              def __get__(self):
                  if self.copts.compaction_style == kCompactionStyleLevel:
                      return 'level'
                  if self.copts.compaction_style == kCompactionStyleUniversal:
                      return 'universal'
                  if self.copts.compaction_style == kCompactionStyleFIFO:
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1094:46: 'kCompactionStyleFIFO' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return 'level'
                  if self.copts.compaction_style == kCompactionStyleUniversal:
                      return 'universal'
                  if self.copts.compaction_style == kCompactionStyleFIFO:
                      return 'fifo'
                  if self.copts.compaction_style == kCompactionStyleNone:
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1096:46: 'kCompactionStyleNone' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return 'none'
                  raise Exception("Unknown compaction_style")
      
              def __set__(self, str value):
                  if value == 'level':
                      self.copts.compaction_style = kCompactionStyleLevel
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1102:46: 'kCompactionStyleLevel' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              def __set__(self, str value):
                  if value == 'level':
                      self.copts.compaction_style = kCompactionStyleLevel
                  elif value == 'universal':
                      self.copts.compaction_style = kCompactionStyleUniversal
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1104:46: 'kCompactionStyleUniversal' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  if value == 'level':
                      self.copts.compaction_style = kCompactionStyleLevel
                  elif value == 'universal':
                      self.copts.compaction_style = kCompactionStyleUniversal
                  elif value == 'fifo':
                      self.copts.compaction_style = kCompactionStyleFIFO
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1106:46: 'kCompactionStyleFIFO' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  elif value == 'universal':
                      self.copts.compaction_style = kCompactionStyleUniversal
                  elif value == 'fifo':
                      self.copts.compaction_style = kCompactionStyleFIFO
                  elif value == 'none':
                      self.copts.compaction_style = kCompactionStyleNone
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1108:46: 'kCompactionStyleNone' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  ret_ob['min_merge_width'] = uopts.min_merge_width
                  ret_ob['max_merge_width'] = uopts.max_merge_width
                  ret_ob['max_size_amplification_percent'] = uopts.max_size_amplification_percent
                  ret_ob['compression_size_percent'] = uopts.compression_size_percent
      
                  if uopts.stop_style == kCompactionStopStyleSimilarSize:
                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1125:35: 'kCompactionStopStyleSimilarSize' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  ret_ob['max_size_amplification_percent'] = uopts.max_size_amplification_percent
                  ret_ob['compression_size_percent'] = uopts.compression_size_percent
      
                  if uopts.stop_style == kCompactionStopStyleSimilarSize:
                      ret_ob['stop_style'] = 'similar_size'
                  elif uopts.stop_style == kCompactionStopStyleTotalSize:
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1127:37: 'kCompactionStopStyleTotalSize' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
                  return ret_ob
      
              def __set__(self, dict value):
                  cdef universal_compaction.CompactionOptionsUniversal* uopts
                  uopts = cython.address(self.copts.compaction_options_universal)
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1136:26: Cannot take address of Python object attribute 'compaction_options_universal'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  if 'compression_size_percent' in value:
                      uopts.compression_size_percent = value['compression_size_percent']
      
                  if 'stop_style' in value:
                      if value['stop_style'] == 'similar_size':
                          uopts.stop_style = kCompactionStopStyleSimilarSize
                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1155:39: 'kCompactionStopStyleSimilarSize' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
                  if 'stop_style' in value:
                      if value['stop_style'] == 'similar_size':
                          uopts.stop_style = kCompactionStopStyleSimilarSize
                      elif value['stop_style'] == 'total_size':
                          uopts.stop_style = kCompactionStopStyleTotalSize
                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1157:39: 'kCompactionStopStyleTotalSize' is not a constant, variable or function identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef options.Options* opts
          cdef PyCache py_row_cache
      
          def __cinit__(self):
              # Destroy the existing ColumnFamilyOptions()
              del self.copts
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1244:16: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self):
              # Destroy the existing ColumnFamilyOptions()
              del self.copts
              self.opts = NULL
              self.copts = self.opts = new options.Options()
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1246:37: 'Options' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self):
              # Destroy the existing ColumnFamilyOptions()
              del self.copts
              self.opts = NULL
              self.copts = self.opts = new options.Options()
                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1246:33: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              self.in_use = False
      
          def __dealloc__(self):
              if not self.opts == NULL:
                  self.copts = NULL
                  del self.opts
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1252:20: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef db.WriteBatch* batch
      
          def __cinit__(self, data=None):
              self.batch = NULL
              if data is not None:
                  self.batch = new db.WriteBatch(bytes_to_string(data))
                                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1468:29: 'WriteBatch' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef db.WriteBatch* batch
      
          def __cinit__(self, data=None):
              self.batch = NULL
              if data is not None:
                  self.batch = new db.WriteBatch(bytes_to_string(data))
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1468:25: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __cinit__(self, data=None):
              self.batch = NULL
              if data is not None:
                  self.batch = new db.WriteBatch(bytes_to_string(data))
              else:
                  self.batch = new db.WriteBatch()
                                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1470:29: 'WriteBatch' is not a type identifier
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __cinit__(self, data=None):
              self.batch = NULL
              if data is not None:
                  self.batch = new db.WriteBatch(bytes_to_string(data))
              else:
                  self.batch = new db.WriteBatch()
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1470:25: new operator can only be applied to a C++ class
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              else:
                  self.batch = new db.WriteBatch()
      
          def __dealloc__(self):
              if not self.batch == NULL:
                  del self.batch
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1474:20: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef Status st
      
              self.batch = batch
              self.pos = 0
      
              st = db.get_batch_items(batch.batch, cython.address(self.items))
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1527:15: cimported module has no attribute 'get_batch_items'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if self.pos == self.items.size():
                  raise StopIteration()
      
              cdef str op
      
              if self.items[self.pos].op == db.BatchItemOpPut:
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1539:40: cimported module has no attribute 'BatchItemOpPut'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              cdef str op
      
              if self.items[self.pos].op == db.BatchItemOpPut:
                  op = "Put"
              elif self.items[self.pos].op == db.BatchItemOpMerge:
                                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1541:42: cimported module has no attribute 'BatchItemOpMerge'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              if self.items[self.pos].op == db.BatchItemOpPut:
                  op = "Put"
              elif self.items[self.pos].op == db.BatchItemOpMerge:
                  op = "Merge"
              elif self.items[self.pos].op == db.BatchItemOpDelte:
                                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1543:42: cimported module has no attribute 'BatchItemOpDelte'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __cinit__(self, db_name, Options opts, dict column_families=None, read_only=False):
              cdef Status st
              cdef string db_path
              cdef vector[db.ColumnFamilyDescriptor] column_family_descriptors
              cdef vector[db.ColumnFamilyHandle*] column_family_handles
              cdef bytes default_cf_name = db.kDefaultColumnFamilyName
                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1576:39: cimported module has no attribute 'kDefaultColumnFamilyName'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              db_path = path_to_string(db_name)
              if not column_families or default_cf_name not in column_families:
                  # Always add the default column family
                  column_family_descriptors.push_back(
                      db.ColumnFamilyDescriptor(
                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1589:18: cimported module has no attribute 'ColumnFamilyDescriptor'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              db_path = path_to_string(db_name)
              if not column_families or default_cf_name not in column_families:
                  # Always add the default column family
                  column_family_descriptors.push_back(
                      db.ColumnFamilyDescriptor(
                          db.kDefaultColumnFamilyName,
                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1590:22: cimported module has no attribute 'kDefaultColumnFamilyName'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not column_families or default_cf_name not in column_families:
                  # Always add the default column family
                  column_family_descriptors.push_back(
                      db.ColumnFamilyDescriptor(
                          db.kDefaultColumnFamilyName,
                          options.ColumnFamilyOptions(deref(opts.opts))
                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1591:27: cimported module has no attribute 'ColumnFamilyOptions'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                              f"ColumnFamilyOptions object for {cf_name} is already "
                              "used by another Column Family"
                          )
                      (<ColumnFamilyOptions>cf_options).in_use = True
                      column_family_descriptors.push_back(
                          db.ColumnFamilyDescriptor(
                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1613:22: cimported module has no attribute 'ColumnFamilyDescriptor'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                          )
                      )
                      self.cf_options.append(cf_options)
              if read_only:
                  with nogil:
                      st = db.DB_OpenForReadOnly_ColumnFamilies(
                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1621:23: cimported module has no attribute 'DB_OpenForReadOnly_ColumnFamilies'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                          &column_family_handles,
                          &self.db,
                          False)
              else:
                  with nogil:
                      st = db.DB_Open_ColumnFamilies(
                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1630:23: cimported module has no attribute 'DB_Open_ColumnFamilies'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      if copts:
                          copts.in_use = False
                  self.cf_options.clear()
      
                  with nogil:
                      del self.db
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1685:24: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                                                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:59: Cannot convert 'string *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  res = self.db.MultiGet(
                      opts,
                      cf_handles,
                      c_keys,
                      cython.address(values))
                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1823:22: Cannot convert 'vector[string] *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          c_key,
                          cython.address(value),
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1859:26: Cannot convert 'string *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          c_key,
                          cython.address(value),
                          cython.address(value_found))
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1860:26: Cannot convert 'bool *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          c_key,
                          cython.address(value))
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1875:26: Cannot convert 'string *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1937:51: Cannot convert 'vector[<error>] *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1962:51: Cannot convert 'vector[<error>] *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1986:51: Cannot convert 'vector[<error>] *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = column_family.get_handle()
      
              with nogil:
                  ret = self.db.GetProperty(cf_handle, c_prop, cython.address(value))
                                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2009:63: Cannot convert 'string *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_live_files_metadata(self):
              cdef vector[db.LiveFileMetaData] metadata
      
              with nogil:
                  self.db.GetLiveFilesMetaData(cython.address(metadata))
                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2020:47: Cannot convert 'vector[<error>] *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              c_options.change_level = py_options.get('change_level', False)
              c_options.target_level = py_options.get('target_level', -1)
      
              blc = py_options.get('bottommost_level_compaction', 'if_compaction_filter')
              if blc == 'skip':
                  c_options.bottommost_level_compaction = options.blc_skip
                                                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2045:59: cimported module has no attribute 'blc_skip'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              blc = py_options.get('bottommost_level_compaction', 'if_compaction_filter')
              if blc == 'skip':
                  c_options.bottommost_level_compaction = options.blc_skip
              elif blc == 'if_compaction_filter':
                  c_options.bottommost_level_compaction = options.blc_is_filter
                                                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2047:59: cimported module has no attribute 'blc_is_filter'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if blc == 'skip':
                  c_options.bottommost_level_compaction = options.blc_skip
              elif blc == 'if_compaction_filter':
                  c_options.bottommost_level_compaction = options.blc_is_filter
              elif blc == 'force':
                  c_options.bottommost_level_compaction = options.blc_force
                                                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2049:59: cimported module has no attribute 'blc_force'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts.fill_cache = py_opts['fill_cache']
              if py_opts['snapshot'] is not None:
                  opts.snapshot = (<Snapshot?>(py_opts['snapshot'])).ptr
      
              if py_opts['read_tier'] == "all":
                  opts.read_tier = options.kReadAllTier
                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2096:36: cimported module has no attribute 'kReadAllTier'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  opts.snapshot = (<Snapshot?>(py_opts['snapshot'])).ptr
      
              if py_opts['read_tier'] == "all":
                  opts.read_tier = options.kReadAllTier
              elif py_opts['read_tier'] == 'cache':
                  opts.read_tier = options.kBlockCacheTier
                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2098:36: cimported module has no attribute 'kBlockCacheTier'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      def repair_db(db_name, Options opts):
          cdef Status st
          cdef string db_path
      
          db_path = path_to_string(db_name)
          st = db.RepairDB(db_path, deref(opts.opts))
                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2156:11: cimported module has no attribute 'RepairDB'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef string db_path
          cdef vector[string] column_families
      
          db_path = path_to_string(db_name)
          with nogil:
              st = db.ListColumnFamilies(deref(opts.opts), db_path, &column_families)
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2167:15: cimported module has no attribute 'ListColumnFamilies'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              self.ptr = NULL
              self.handle = handle
      
          def __dealloc__(self):
              if not self.ptr == NULL:
                  del self.ptr
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2204:20: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef Status st
              cdef string c_backup_dir
              self.engine = NULL
      
              c_backup_dir = path_to_string(backup_dir)
              st = backup.BackupEngine_Open(
                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2331:19: cimported module has no attribute 'BackupEngine_Open'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef string c_backup_dir
              self.engine = NULL
      
              c_backup_dir = path_to_string(backup_dir)
              st = backup.BackupEngine_Open(
                  env.Env_Default(),
                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2332:15: cimported module has no attribute 'Env_Default'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              self.engine = NULL
      
              c_backup_dir = path_to_string(backup_dir)
              st = backup.BackupEngine_Open(
                  env.Env_Default(),
                  backup.BackupableDBOptions(c_backup_dir),
                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2333:18: cimported module has no attribute 'BackupableDBOptions'
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(st)
      
          def __dealloc__(self):
              if not self.engine == NULL:
                  with nogil:
                      del self.engine
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2341:24: Deletion of non-Python, non-C++ object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_backup_info(self):
              cdef vector[backup.BackupInfo] backup_info
      
              with nogil:
                  self.engine.GetBackupInfo(cython.address(backup_info))
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2413:44: Cannot convert 'vector[<error>] *' to Python object
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1717:28: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1717:28: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1717:24: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1717:28: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
                                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1717:29: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1717:35: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1717:46: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Put(opts, cf_handle, c_key, c_value)
                                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1717:53: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Delete(opts, cf_handle, c_key)
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1737:31: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Delete(opts, cf_handle, c_key)
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1737:31: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Delete(opts, cf_handle, c_key)
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1737:24: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Delete(opts, cf_handle, c_key)
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1737:31: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Delete(opts, cf_handle, c_key)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1737:32: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Delete(opts, cf_handle, c_key)
                                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1737:38: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Delete(opts, cf_handle, c_key)
                                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1737:49: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1758:30: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1758:30: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1758:24: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1758:30: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1758:31: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1758:37: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1758:48: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Merge(opts, cf_handle, c_key, c_value)
                                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1758:55: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.WriteOptions opts
              opts.sync = sync
              opts.disableWAL = disable_wal
      
              with nogil:
                  st = self.db.Write(opts, batch.batch)
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1768:30: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.WriteOptions opts
              opts.sync = sync
              opts.disableWAL = disable_wal
      
              with nogil:
                  st = self.db.Write(opts, batch.batch)
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1768:30: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.WriteOptions opts
              opts.sync = sync
              opts.disableWAL = disable_wal
      
              with nogil:
                  st = self.db.Write(opts, batch.batch)
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1768:24: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.WriteOptions opts
              opts.sync = sync
              opts.disableWAL = disable_wal
      
              with nogil:
                  st = self.db.Write(opts, batch.batch)
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1768:30: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.WriteOptions opts
              opts.sync = sync
              opts.disableWAL = disable_wal
      
              with nogil:
                  st = self.db.Write(opts, batch.batch)
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1768:31: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.WriteOptions opts
              opts.sync = sync
              opts.disableWAL = disable_wal
      
              with nogil:
                  st = self.db.Write(opts, batch.batch)
                                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1768:42: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:28: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:28: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:24: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:28: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:29: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:35: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:46: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
      
              with nogil:
                  st = self.db.Get(opts, cf_handle, c_key, cython.address(res))
                                                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1789:59: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.ReadOptions opts
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              cdef vector[Status] res
              with nogil:
                  res = self.db.MultiGet(
                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1819:34: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.ReadOptions opts
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              cdef vector[Status] res
              with nogil:
                  res = self.db.MultiGet(
                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1819:34: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.ReadOptions opts
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              cdef vector[Status] res
              with nogil:
                  res = self.db.MultiGet(
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1819:25: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef options.ReadOptions opts
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              cdef vector[Status] res
              with nogil:
                  res = self.db.MultiGet(
                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1819:34: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              cdef vector[Status] res
              with nogil:
                  res = self.db.MultiGet(
                      opts,
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1820:16: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              cdef vector[Status] res
              with nogil:
                  res = self.db.MultiGet(
                      opts,
                      cf_handles,
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1821:16: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef vector[Status] res
              with nogil:
                  res = self.db.MultiGet(
                      opts,
                      cf_handles,
                      c_keys,
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1822:16: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              with nogil:
                  res = self.db.MultiGet(
                      opts,
                      cf_handles,
                      c_keys,
                      cython.address(values))
                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1823:22: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              exists = False
      
              if fetch:
                  value_found = False
                  with nogil:
                      exists = self.db.KeyMayExist(
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1855:44: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              exists = False
      
              if fetch:
                  value_found = False
                  with nogil:
                      exists = self.db.KeyMayExist(
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1855:44: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              exists = False
      
              if fetch:
                  value_found = False
                  with nogil:
                      exists = self.db.KeyMayExist(
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1855:32: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              exists = False
      
              if fetch:
                  value_found = False
                  with nogil:
                      exists = self.db.KeyMayExist(
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1855:44: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              if fetch:
                  value_found = False
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1856:20: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if fetch:
                  value_found = False
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1857:20: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  value_found = False
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          c_key,
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1858:20: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          c_key,
                          cython.address(value),
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1859:26: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          c_key,
                          cython.address(value),
                          cython.address(value_found))
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1860:26: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                          return (True, None)
                  else:
                      return (False, None)
              else:
                  with nogil:
                      exists = self.db.KeyMayExist(
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1871:44: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                          return (True, None)
                  else:
                      return (False, None)
              else:
                  with nogil:
                      exists = self.db.KeyMayExist(
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1871:44: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                          return (True, None)
                  else:
                      return (False, None)
              else:
                  with nogil:
                      exists = self.db.KeyMayExist(
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1871:32: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                          return (True, None)
                  else:
                      return (False, None)
              else:
                  with nogil:
                      exists = self.db.KeyMayExist(
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1871:44: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  else:
                      return (False, None)
              else:
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1872:20: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                      return (False, None)
              else:
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1873:20: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              else:
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          c_key,
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1874:20: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  with nogil:
                      exists = self.db.KeyMayExist(
                          opts,
                          cf_handle,
                          c_key,
                          cython.address(value))
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1875:26: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              it = KeysIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1890:40: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              it = KeysIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1890:40: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              it = KeysIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1890:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              it = KeysIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1890:40: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              it = KeysIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1890:41: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              it = KeysIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1890:47: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ValuesIterator(self)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1905:40: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ValuesIterator(self)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1905:40: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ValuesIterator(self)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1905:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ValuesIterator(self)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1905:40: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ValuesIterator(self)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1905:41: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ValuesIterator(self)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1905:47: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ItemsIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1919:40: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ItemsIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1919:40: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ItemsIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1919:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ItemsIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1919:40: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ItemsIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1919:41: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
      
              it = ItemsIterator(self, column_family)
      
              with nogil:
                  it.ptr = self.db.NewIterator(opts, cf_handle)
                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1919:47: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1937:32: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1937:32: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1937:19: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1937:32: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1937:33: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1937:39: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1937:51: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1962:32: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1962:32: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1962:19: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1962:32: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1962:33: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1962:39: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1962:51: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1986:32: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1986:32: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1986:19: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1986:32: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1986:33: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1986:39: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  cf_handle = (<ColumnFamilyHandle?>column_family).get_handle()
                  cf_handles.push_back(cf_handle)
      
              opts = self.build_read_opts(self.__parse_read_opts(*args, **kwargs))
              with nogil:
                  self.db.NewIterators(opts, cf_handles, &iters)
                                                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:1986:51: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = column_family.get_handle()
      
              with nogil:
                  ret = self.db.GetProperty(cf_handle, c_prop, cython.address(value))
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2009:37: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = column_family.get_handle()
      
              with nogil:
                  ret = self.db.GetProperty(cf_handle, c_prop, cython.address(value))
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2009:37: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = column_family.get_handle()
      
              with nogil:
                  ret = self.db.GetProperty(cf_handle, c_prop, cython.address(value))
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2009:25: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = column_family.get_handle()
      
              with nogil:
                  ret = self.db.GetProperty(cf_handle, c_prop, cython.address(value))
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2009:37: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = column_family.get_handle()
      
              with nogil:
                  ret = self.db.GetProperty(cf_handle, c_prop, cython.address(value))
                                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2009:38: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = column_family.get_handle()
      
              with nogil:
                  ret = self.db.GetProperty(cf_handle, c_prop, cython.address(value))
                                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2009:49: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef db.ColumnFamilyHandle* cf_handle = self.db.DefaultColumnFamily()
              if column_family:
                  cf_handle = column_family.get_handle()
      
              with nogil:
                  ret = self.db.GetProperty(cf_handle, c_prop, cython.address(value))
                                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2009:63: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_live_files_metadata(self):
              cdef vector[db.LiveFileMetaData] metadata
      
              with nogil:
                  self.db.GetLiveFilesMetaData(cython.address(metadata))
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2020:40: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_live_files_metadata(self):
              cdef vector[db.LiveFileMetaData] metadata
      
              with nogil:
                  self.db.GetLiveFilesMetaData(cython.address(metadata))
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2020:40: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_live_files_metadata(self):
              cdef vector[db.LiveFileMetaData] metadata
      
              with nogil:
                  self.db.GetLiveFilesMetaData(cython.address(metadata))
                         ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2020:19: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_live_files_metadata(self):
              cdef vector[db.LiveFileMetaData] metadata
      
              with nogil:
                  self.db.GetLiveFilesMetaData(cython.address(metadata))
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2020:40: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_live_files_metadata(self):
              cdef vector[db.LiveFileMetaData] metadata
      
              with nogil:
                  self.db.GetLiveFilesMetaData(cython.address(metadata))
                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2020:47: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if copts.in_use:
                  raise Exception("ColumnFamilyOptions are in_use by another column family")
      
              copts.in_use = True
              with nogil:
                  st = self.db.CreateColumnFamily(deref(copts.copts), c_name, &cf_handle)
                                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2122:43: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if copts.in_use:
                  raise Exception("ColumnFamilyOptions are in_use by another column family")
      
              copts.in_use = True
              with nogil:
                  st = self.db.CreateColumnFamily(deref(copts.copts), c_name, &cf_handle)
                                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2122:43: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if copts.in_use:
                  raise Exception("ColumnFamilyOptions are in_use by another column family")
      
              copts.in_use = True
              with nogil:
                  st = self.db.CreateColumnFamily(deref(copts.copts), c_name, &cf_handle)
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2122:24: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if copts.in_use:
                  raise Exception("ColumnFamilyOptions are in_use by another column family")
      
              copts.in_use = True
              with nogil:
                  st = self.db.CreateColumnFamily(deref(copts.copts), c_name, &cf_handle)
                                                 ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2122:43: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if copts.in_use:
                  raise Exception("ColumnFamilyOptions are in_use by another column family")
      
              copts.in_use = True
              with nogil:
                  st = self.db.CreateColumnFamily(deref(copts.copts), c_name, &cf_handle)
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2122:44: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if copts.in_use:
                  raise Exception("ColumnFamilyOptions are in_use by another column family")
      
              copts.in_use = True
              with nogil:
                  st = self.db.CreateColumnFamily(deref(copts.copts), c_name, &cf_handle)
                                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2122:64: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if copts.in_use:
                  raise Exception("ColumnFamilyOptions are in_use by another column family")
      
              copts.in_use = True
              with nogil:
                  st = self.db.CreateColumnFamily(deref(copts.copts), c_name, &cf_handle)
                                                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2122:72: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef Status st
      
              cf_handle = weak_handle.get_handle()
      
              with nogil:
                  st = self.db.DropColumnFamily(cf_handle)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2139:41: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef Status st
      
              cf_handle = weak_handle.get_handle()
      
              with nogil:
                  st = self.db.DropColumnFamily(cf_handle)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2139:41: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef Status st
      
              cf_handle = weak_handle.get_handle()
      
              with nogil:
                  st = self.db.DropColumnFamily(cf_handle)
                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2139:24: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef Status st
      
              cf_handle = weak_handle.get_handle()
      
              with nogil:
                  st = self.db.DropColumnFamily(cf_handle)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2139:41: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef Status st
      
              cf_handle = weak_handle.get_handle()
      
              with nogil:
                  st = self.db.DropColumnFamily(cf_handle)
                                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2139:42: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self, DB db):
              self.db = db
              self.ptr = NULL
              with nogil:
                  self.ptr = db.db.GetSnapshot()
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2183:40: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self, DB db):
              self.db = db
              self.ptr = NULL
              with nogil:
                  self.ptr = db.db.GetSnapshot()
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2183:40: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self, DB db):
              self.db = db
              self.ptr = NULL
              with nogil:
                  self.ptr = db.db.GetSnapshot()
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2183:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def __cinit__(self, DB db):
              self.db = db
              self.ptr = NULL
              with nogil:
                  self.ptr = db.db.GetSnapshot()
                                              ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2183:40: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr = db.db.GetSnapshot()
      
          def __dealloc__(self):
              if not self.ptr == NULL:
                  with nogil:
                      self.db.db.ReleaseSnapshot(self.ptr)
                                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2188:42: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr = db.db.GetSnapshot()
      
          def __dealloc__(self):
              if not self.ptr == NULL:
                  with nogil:
                      self.db.db.ReleaseSnapshot(self.ptr)
                                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2188:42: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr = db.db.GetSnapshot()
      
          def __dealloc__(self):
              if not self.ptr == NULL:
                  with nogil:
                      self.db.db.ReleaseSnapshot(self.ptr)
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2188:26: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr = db.db.GetSnapshot()
      
          def __dealloc__(self):
              if not self.ptr == NULL:
                  with nogil:
                      self.db.db.ReleaseSnapshot(self.ptr)
                                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2188:42: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr = db.db.GetSnapshot()
      
          def __dealloc__(self):
              if not self.ptr == NULL:
                  with nogil:
                      self.db.db.ReleaseSnapshot(self.ptr)
                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2188:47: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.ptr.Valid():
                  raise StopIteration()
      
              cdef object ret = self.get_ob()
              with nogil:
                  self.ptr.Next()
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2215:25: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.ptr.Valid():
                  raise StopIteration()
      
              cdef object ret = self.get_ob()
              with nogil:
                  self.ptr.Next()
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2215:25: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.ptr.Valid():
                  raise StopIteration()
      
              cdef object ret = self.get_ob()
              with nogil:
                  self.ptr.Next()
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2215:20: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.ptr.Valid():
                  raise StopIteration()
      
              cdef object ret = self.get_ob()
              with nogil:
                  self.ptr.Next()
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2215:25: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __reversed__(self):
              return ReversedIterator(self)
      
          cpdef seek_to_first(self):
              with nogil:
                  self.ptr.SeekToFirst()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2228:32: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __reversed__(self):
              return ReversedIterator(self)
      
          cpdef seek_to_first(self):
              with nogil:
                  self.ptr.SeekToFirst()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2228:32: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __reversed__(self):
              return ReversedIterator(self)
      
          cpdef seek_to_first(self):
              with nogil:
                  self.ptr.SeekToFirst()
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2228:20: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          def __reversed__(self):
              return ReversedIterator(self)
      
          cpdef seek_to_first(self):
              with nogil:
                  self.ptr.SeekToFirst()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2228:32: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr.SeekToFirst()
              check_status(self.ptr.status())
      
          cpdef seek_to_last(self):
              with nogil:
                  self.ptr.SeekToLast()
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2233:31: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr.SeekToFirst()
              check_status(self.ptr.status())
      
          cpdef seek_to_last(self):
              with nogil:
                  self.ptr.SeekToLast()
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2233:31: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr.SeekToFirst()
              check_status(self.ptr.status())
      
          cpdef seek_to_last(self):
              with nogil:
                  self.ptr.SeekToLast()
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2233:20: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
                  self.ptr.SeekToFirst()
              check_status(self.ptr.status())
      
          cpdef seek_to_last(self):
              with nogil:
                  self.ptr.SeekToLast()
                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2233:31: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.Seek(c_key)
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2239:25: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.Seek(c_key)
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2239:25: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.Seek(c_key)
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2239:20: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.Seek(c_key)
                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2239:25: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.Seek(c_key)
                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2239:26: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek_for_prev(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.SeekForPrev(c_key)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2245:32: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek_for_prev(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.SeekForPrev(c_key)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2245:32: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek_for_prev(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.SeekForPrev(c_key)
                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2245:20: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek_for_prev(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.SeekForPrev(c_key)
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2245:32: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              check_status(self.ptr.status())
      
          cpdef seek_for_prev(self, key):
              cdef Slice c_key = bytes_to_slice(key)
              with nogil:
                  self.ptr.SeekForPrev(c_key)
                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2245:33: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class KeysIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              with nogil:
                  c_key = self.ptr.key()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2256:32: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class KeysIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              with nogil:
                  c_key = self.ptr.key()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2256:32: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class KeysIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              with nogil:
                  c_key = self.ptr.key()
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2256:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class KeysIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              with nogil:
                  c_key = self.ptr.key()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2256:32: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class ValuesIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_value
              with nogil:
                  c_value = self.ptr.value()
                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2267:36: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class ValuesIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_value
              with nogil:
                  c_value = self.ptr.value()
                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2267:36: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class ValuesIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_value
              with nogil:
                  c_value = self.ptr.value()
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2267:30: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      @cython.internal
      cdef class ValuesIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_value
              with nogil:
                  c_value = self.ptr.value()
                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2267:36: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef class ItemsIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
              with nogil:
                  c_key = self.ptr.key()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2277:32: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef class ItemsIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
              with nogil:
                  c_key = self.ptr.key()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2277:32: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef class ItemsIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
              with nogil:
                  c_key = self.ptr.key()
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2277:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      cdef class ItemsIterator(BaseIterator):
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
              with nogil:
                  c_key = self.ptr.key()
                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2277:32: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
              with nogil:
                  c_key = self.ptr.key()
                  c_value = self.ptr.value()
                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2278:36: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
              with nogil:
                  c_key = self.ptr.key()
                  c_value = self.ptr.value()
                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2278:36: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
              with nogil:
                  c_key = self.ptr.key()
                  c_value = self.ptr.value()
                                    ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2278:30: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
          cdef object get_ob(self):
              cdef Slice c_key
              cdef Slice c_value
              with nogil:
                  c_key = self.ptr.key()
                  c_value = self.ptr.value()
                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2278:36: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.it.ptr.Valid():
                  raise StopIteration()
      
              cdef object ret = self.it.get_ob()
              with nogil:
                  self.it.ptr.Prev()
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2318:28: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.it.ptr.Valid():
                  raise StopIteration()
      
              cdef object ret = self.it.get_ob()
              with nogil:
                  self.it.ptr.Prev()
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2318:28: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.it.ptr.Valid():
                  raise StopIteration()
      
              cdef object ret = self.it.get_ob()
              with nogil:
                  self.it.ptr.Prev()
                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2318:23: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              if not self.it.ptr.Valid():
                  raise StopIteration()
      
              cdef object ret = self.it.get_ob()
              with nogil:
                  self.it.ptr.Prev()
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2318:28: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef cpp_bool c_flush_before_backup
      
              c_flush_before_backup = flush_before_backup
      
              with nogil:
                  st = self.engine.CreateNewBackup(db.db, c_flush_before_backup)
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2350:44: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef cpp_bool c_flush_before_backup
      
              c_flush_before_backup = flush_before_backup
      
              with nogil:
                  st = self.engine.CreateNewBackup(db.db, c_flush_before_backup)
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2350:44: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef cpp_bool c_flush_before_backup
      
              c_flush_before_backup = flush_before_backup
      
              with nogil:
                  st = self.engine.CreateNewBackup(db.db, c_flush_before_backup)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2350:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef cpp_bool c_flush_before_backup
      
              c_flush_before_backup = flush_before_backup
      
              with nogil:
                  st = self.engine.CreateNewBackup(db.db, c_flush_before_backup)
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2350:44: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef cpp_bool c_flush_before_backup
      
              c_flush_before_backup = flush_before_backup
      
              with nogil:
                  st = self.engine.CreateNewBackup(db.db, c_flush_before_backup)
                                                     ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2350:47: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef cpp_bool c_flush_before_backup
      
              c_flush_before_backup = flush_before_backup
      
              with nogil:
                  st = self.engine.CreateNewBackup(db.db, c_flush_before_backup)
                                                          ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2350:52: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              c_backup_id = backup_id
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromBackup(
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2364:48: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              c_backup_id = backup_id
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromBackup(
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2364:48: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              c_backup_id = backup_id
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromBackup(
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2364:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              c_backup_id = backup_id
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromBackup(
                                                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2364:48: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromBackup(
                      c_backup_id,
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2365:16: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromBackup(
                      c_backup_id,
                      c_db_dir,
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2366:16: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              with nogil:
                  st = self.engine.RestoreDBFromBackup(
                      c_backup_id,
                      c_db_dir,
                      c_wal_dir)
                      ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2367:16: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromLatestBackup(c_db_dir, c_wal_dir)
                                                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2380:54: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromLatestBackup(c_db_dir, c_wal_dir)
                                                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2380:54: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromLatestBackup(c_db_dir, c_wal_dir)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2380:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromLatestBackup(c_db_dir, c_wal_dir)
                                                            ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2380:54: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromLatestBackup(c_db_dir, c_wal_dir)
                                                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2380:55: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              c_db_dir = path_to_string(db_dir)
              c_wal_dir = path_to_string(wal_dir)
      
              with nogil:
                  st = self.engine.RestoreDBFromLatestBackup(c_db_dir, c_wal_dir)
                                                                       ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2380:65: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              check_status(st)
      
          def stop_backup(self):
              with nogil:
                  self.engine.StopBackup()
                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2386:34: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              check_status(st)
      
          def stop_backup(self):
              with nogil:
                  self.engine.StopBackup()
                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2386:34: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              check_status(st)
      
          def stop_backup(self):
              with nogil:
                  self.engine.StopBackup()
                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2386:23: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
              check_status(st)
      
          def stop_backup(self):
              with nogil:
                  self.engine.StopBackup()
                                        ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2386:34: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef uint32_t c_num_backups_to_keep
      
              c_num_backups_to_keep = num_backups_to_keep
      
              with nogil:
                  st = self.engine.PurgeOldBackups(c_num_backups_to_keep)
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2395:44: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef uint32_t c_num_backups_to_keep
      
              c_num_backups_to_keep = num_backups_to_keep
      
              with nogil:
                  st = self.engine.PurgeOldBackups(c_num_backups_to_keep)
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2395:44: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef uint32_t c_num_backups_to_keep
      
              c_num_backups_to_keep = num_backups_to_keep
      
              with nogil:
                  st = self.engine.PurgeOldBackups(c_num_backups_to_keep)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2395:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef uint32_t c_num_backups_to_keep
      
              c_num_backups_to_keep = num_backups_to_keep
      
              with nogil:
                  st = self.engine.PurgeOldBackups(c_num_backups_to_keep)
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2395:44: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef uint32_t c_num_backups_to_keep
      
              c_num_backups_to_keep = num_backups_to_keep
      
              with nogil:
                  st = self.engine.PurgeOldBackups(c_num_backups_to_keep)
                                                   ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2395:45: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef backup.BackupID c_backup_id
      
              c_backup_id = backup_id
      
              with nogil:
                  st = self.engine.DeleteBackup(c_backup_id)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2405:41: Coercion from Python not allowed without the GIL
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef backup.BackupID c_backup_id
      
              c_backup_id = backup_id
      
              with nogil:
                  st = self.engine.DeleteBackup(c_backup_id)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2405:41: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef backup.BackupID c_backup_id
      
              c_backup_id = backup_id
      
              with nogil:
                  st = self.engine.DeleteBackup(c_backup_id)
                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2405:28: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef backup.BackupID c_backup_id
      
              c_backup_id = backup_id
      
              with nogil:
                  st = self.engine.DeleteBackup(c_backup_id)
                                               ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2405:41: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
              cdef backup.BackupID c_backup_id
      
              c_backup_id = backup_id
      
              with nogil:
                  st = self.engine.DeleteBackup(c_backup_id)
                                                ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2405:42: Converting to Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_backup_info(self):
              cdef vector[backup.BackupInfo] backup_info
      
              with nogil:
                  self.engine.GetBackupInfo(cython.address(backup_info))
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2413:37: Discarding owned Python object not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_backup_info(self):
              cdef vector[backup.BackupInfo] backup_info
      
              with nogil:
                  self.engine.GetBackupInfo(cython.address(backup_info))
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2413:37: Calling gil-requiring function not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_backup_info(self):
              cdef vector[backup.BackupInfo] backup_info
      
              with nogil:
                  self.engine.GetBackupInfo(cython.address(backup_info))
                             ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2413:23: Accessing Python attribute not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_backup_info(self):
              cdef vector[backup.BackupInfo] backup_info
      
              with nogil:
                  self.engine.GetBackupInfo(cython.address(backup_info))
                                           ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2413:37: Constructing Python tuple not allowed without gil
      
      Error compiling Cython file:
      ------------------------------------------------------------
      ...
      
          def get_backup_info(self):
              cdef vector[backup.BackupInfo] backup_info
      
              with nogil:
                  self.engine.GetBackupInfo(cython.address(backup_info))
                                                  ^
      ------------------------------------------------------------
      
      rocksdb/_rocksdb.pyx:2413:44: Converting to Python object not allowed without gil
      Traceback (most recent call last):
        File "<string>", line 2, in <module>
        File "<pip-setuptools-caller>", line 34, in <module>
        File "/tmp/pip-install-2w2tx56z/python-rocksdb_7e9861a4bf784031ad304fd7592f6a55/setup.py", line 21, in <module>
          setup(
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/__init__.py", line 103, in setup
          return distutils.core.setup(**attrs)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/core.py", line 185, in setup
          return run_commands(dist)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/core.py", line 201, in run_commands
          dist.run_commands()
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/dist.py", line 969, in run_commands
          self.run_command(cmd)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/dist.py", line 963, in run_command
          super().run_command(command)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/dist.py", line 988, in run_command
          cmd_obj.run()
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/wheel/bdist_wheel.py", line 368, in run
          self.run_command("build")
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/cmd.py", line 318, in run_command
          self.distribution.run_command(command)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/dist.py", line 963, in run_command
          super().run_command(command)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/dist.py", line 988, in run_command
          cmd_obj.run()
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/command/build.py", line 131, in run
          self.run_command(cmd_name)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/cmd.py", line 318, in run_command
          self.distribution.run_command(command)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/dist.py", line 963, in run_command
          super().run_command(command)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/dist.py", line 988, in run_command
          cmd_obj.run()
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/command/build_ext.py", line 88, in run
          _build_ext.run(self)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/command/build_ext.py", line 345, in run
          self.build_extensions()
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/command/build_ext.py", line 467, in build_extensions
          self._build_extensions_serial()
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/_distutils/command/build_ext.py", line 493, in _build_extensions_serial
          self.build_extension(ext)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/setuptools/command/build_ext.py", line 249, in build_extension
          _build_ext.build_extension(self, ext)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/Cython/Distutils/build_ext.py", line 130, in build_extension
          new_ext = cythonize(
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/Cython/Build/Dependencies.py", line 1154, in cythonize
          cythonize_one(*args)
        File "/home/psychopunk_sage/Hyperledger/Indy/.direnv/python-3.9.0/lib/python3.9/site-packages/Cython/Build/Dependencies.py", line 1321, in cythonize_one
          raise CompileError(None, pyx_file)
      Cython.Compiler.Errors.CompileError: rocksdb/_rocksdb.pyx
      [end of output]
  
  note: This error originates from a subprocess, and is likely not a problem with pip.
  ERROR: Failed building wheel for python-rocksdb
  Running setup.py clean for python-rocksdb
Failed to build python-rocksdb
ERROR: Could not build wheels for python-rocksdb, which is required to install pyproject.toml-based projects
